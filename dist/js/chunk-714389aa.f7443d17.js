(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-714389aa"],{6379:function(e,n){var t={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getEthBalance"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"hash"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getEthBalance"},arguments:[{kind:"Argument",name:{kind:"Name",value:"owner"},value:{kind:"Variable",name:{kind:"Name",value:"hash"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"balance"},arguments:[],directives:[]}]}}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getLatestPrices"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getLatestPrices"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"id"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"symbol"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"image"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"contract"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"current_price"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"market_cap"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total_volume"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"price_change_percentage_24h"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"total_supply"},arguments:[],directives:[]}]}}]}},{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"getBalanceHistory"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"timeString"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"todaysDate"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"Int"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"key"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"scale"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"TimeseriesScale"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"_nextKey"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"getTimeseriesData"},arguments:[{kind:"Argument",name:{kind:"Name",value:"fromT"},value:{kind:"Variable",name:{kind:"Name",value:"timeString"}}},{kind:"Argument",name:{kind:"Name",value:"toT"},value:{kind:"Variable",name:{kind:"Name",value:"todaysDate"}}},{kind:"Argument",name:{kind:"Name",value:"key"},value:{kind:"Variable",name:{kind:"Name",value:"key"}}},{kind:"Argument",name:{kind:"Name",value:"scale"},value:{kind:"Variable",name:{kind:"Name",value:"scale"}}},{kind:"Argument",name:{kind:"Name",value:"nextKey"},value:{kind:"Variable",name:{kind:"Name",value:"_nextKey"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"items"},arguments:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"value"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"timestamp"},arguments:[],directives:[]}]}},{kind:"Field",name:{kind:"Name",value:"nextKey"},arguments:[],directives:[]}]}}]}},{kind:"OperationDefinition",operation:"subscription",name:{kind:"Name",value:"subscribeToAccountBalance"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"owner"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"event"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"AddressEventType"}}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"addressEvent"},arguments:[{kind:"Argument",name:{kind:"Name",value:"owner"},value:{kind:"Variable",name:{kind:"Name",value:"owner"}}},{kind:"Argument",name:{kind:"Name",value:"event"},value:{kind:"Variable",name:{kind:"Name",value:"event"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"blockNumber"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:791}};t.loc.source={body:"query getEthBalance($hash: String!) {\n  getEthBalance(owner: $hash) {\n    balance\n  }\n}\n\nquery getLatestPrices {\n  getLatestPrices {\n      id\n      symbol\n      name\n      image\n      contract\n      current_price\n      market_cap\n      total_volume\n      price_change_percentage_24h\n      total_supply\n  }\n}\n\nquery getBalanceHistory(\n  $timeString: Int!\n  $todaysDate: Int!\n  $key: String!\n  $scale: TimeseriesScale!\n  $_nextKey: String\n) {\n  getTimeseriesData(\n    fromT: $timeString\n    toT: $todaysDate\n    key: $key\n    scale: $scale\n    nextKey: $_nextKey\n  ) {\n    items {\n      value\n      timestamp\n    }\n    nextKey\n  }\n}\n\nsubscription subscribeToAccountBalance(\n  $owner: String!\n  $event: AddressEventType!\n) {\n  addressEvent(owner: $owner, event: $event) {\n    blockNumber\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function i(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var t=e.type;"NamedType"===t.kind&&n.add(t.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){i(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){i(e,n)})),e.definitions&&e.definitions.forEach((function(e){i(e,n)}))}var a={};function s(e,n){for(var t=0;t<e.definitions.length;t++){var i=e.definitions[t];if(i.name&&i.name.value==n)return i}}function r(e,n){var t={kind:e.kind,definitions:[s(e,n)]};e.hasOwnProperty("loc")&&(t.loc=e.loc);var i=a[n]||new Set,r=new Set,o=new Set;i.forEach((function(e){o.add(e)}));while(o.size>0){var c=o;o=new Set,c.forEach((function(e){if(!r.has(e)){r.add(e);var n=a[e]||new Set;n.forEach((function(e){o.add(e)}))}}))}return r.forEach((function(n){var i=s(e,n);i&&t.definitions.push(i)})),t}(function(){t.definitions.forEach((function(e){if(e.name){var n=new Set;i(e,n),a[e.name.value]=n}}))})(),e.exports=t,e.exports["getEthBalance"]=r(t,"getEthBalance"),e.exports["getLatestPrices"]=r(t,"getLatestPrices"),e.exports["getBalanceHistory"]=r(t,"getBalanceHistory"),e.exports["subscribeToAccountBalance"]=r(t,"subscribeToAccountBalance")},"68ba":function(e,n,t){"use strict";t("ce65")},"80e0b":function(e,n,t){"use strict";t.r(n);var i=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{staticClass:"wallet-main"},[t("the-wallet-side-menu"),t("v-main",[t("v-container",{staticClass:"pa-2 pa-md-3 mb-14",attrs:{fluid:""}},[t("the-wallet-header"),t("module-confirmation"),e.isOfflineApp?e._e():t("the-enkrypt-popup",{attrs:{show:e.walletEnkryptPopup}}),t("router-view")],1)],1),t("the-wallet-footer",{attrs:{"is-offline-app":e.isOfflineApp}}),e.isOfflineApp?e._e():t("enkrypt-promo-snackbar"),t("module-paper-wallet",{attrs:{open:e.showPaperWallet,close:e.closePaperWallet,"is-offline-app":e.isOfflineApp},on:{close:e.closePaperWallet}})],1)},a=[],s=t("c7eb"),r=t("1da1"),o=t("5530"),c=(t("d3b7"),t("3ca3"),t("ddb0"),t("14d9"),t("4ec9"),t("159b"),t("7db0"),t("07ac"),t("b0c0"),t("2f62")),l=t("5ba3"),d=t("99e5"),u=t.n(d),k=t("c1df"),m=t.n(k),p=t("2ef0"),b=t("6379"),h=t("9b88"),v={name:"HandlerWallet",data:function(){return{getLatestPrices:"",tokensData:{}}},apollo:{getLatestPrices:{query:b["getLatestPrices"],pollInterval:6e5,result:function(e){var n=this,t=e.data;this.tokensData=new Map,t&&t.getLatestPrices&&(t.getLatestPrices.forEach((function(e){n.tokensData.set(e.id,e)})),this.setCoinGeckoTokens(this.tokensData))},error:function(e){Object(h["d"])(e.message,{},h["a"])}}},methods:Object(o["a"])({},Object(c["b"])("external",["setCoinGeckoTokens"]))},f=t("fbdf"),w=t("e425"),N=t("db3a"),g=t("5965"),y=t("07db"),S=t("068e"),T=t("217a"),O={components:{TheWalletSideMenu:function(){return t.e("chunk-2deb90e1").then(t.bind(null,"64ba"))},TheWalletHeader:function(){return t.e("chunk-68d55bdf").then(t.bind(null,"0aac"))},TheWalletFooter:function(){return t.e("chunk-539ca514").then(t.bind(null,"fb54"))},ModuleConfirmation:function(){return t.e("chunk-139736da").then(t.bind(null,"022b"))},EnkryptPromoSnackbar:function(){return t.e("chunk-c909284e").then(t.bind(null,"4ac7"))},TheEnkryptPopup:function(){return t.e("chunk-5055b103").then(t.bind(null,"d413"))},ModulePaperWallet:function(){return t.e("chunk-817b93d6").then(t.bind(null,"6da0"))}},mixins:[v,g["a"]],data:function(){return{showPaperWallet:!1}},computed:Object(o["a"])(Object(o["a"])(Object(o["a"])(Object(o["a"])(Object(o["a"])(Object(o["a"])(Object(o["a"])({},Object(c["d"])("wallet",["address","web3","identifier","isOfflineApp","instance"])),Object(c["d"])("global",["online","gasPriceType","baseGasPrice"])),Object(c["d"])("external",["coinGeckoTokens"])),Object(c["d"])("popups",["enkryptWalletPopup","enkryptLandingPopup","enkryptLandingPopupClosed"])),Object(c["c"])("global",["network","gasPrice","isEIP1559SupportedNetwork"])),Object(c["c"])("wallet",["balanceInWei"])),{},{walletEnkryptPopup:function(){return!this.enkryptLandingPopup&&m()(new Date).diff(this.enkryptLandingPopupClosed,"hours")>=24&&this.enkryptWalletPopup}}),watch:{address:function(e){e?(this.setup(),this.setTokensAndBalance()):this.$router.push({name:N["a"].HOME.NAME})},network:function(){this.online&&!this.isOfflineApp&&(this.web3.eth.clearSubscriptions(),this.identifier===T["a"].WEB3_WALLET?this.setWeb3Instance(window.ethereum):this.setWeb3Instance(),this.setup(),this.identifier!==T["a"].WEB3_WALLET&&this.setTokensAndBalance())},coinGeckoTokens:function(e,n){Object(p["isEqual"])(e,n)||this.setTokensAndBalance()}},mounted:function(){var e=this;S["a"].$on("openPaperWallet",(function(){e.showPaperWallet=!0,e.$router.push({name:N["b"].PRINT.NAME})})),this.online&&!this.isOfflineApp&&(this.setup(),this.setTokensAndBalance(),this.identifier===T["a"].WEB3_WALLET&&this.web3Listeners(),this.checkNetwork())},beforeDestroy:function(){S["a"].$off("openPaperWallet"),this.online&&!this.isOfflineApp&&this.web3.eth.clearSubscriptions(),window.ethereum&&window.ethereum.removeListener instanceof Function&&(this.findAndSetNetwork instanceof Function&&window.ethereum.removeListener("chainChanged",this.findAndSetNetwork),this.setWeb3Account instanceof Function&&window.ethereum.removeListener("accountsChanged",this.setWeb3Account))},methods:Object(o["a"])(Object(o["a"])(Object(o["a"])(Object(o["a"])({},Object(c["b"])("wallet",["setBlockNumber","setTokens","setWallet","setWeb3Instance"])),Object(c["b"])("global",["setNetwork","setBaseFeePerGas","updateGasPrice","setValidNetwork"])),Object(c["b"])("external",["setTokenAndEthBalance","setNetworkTokens"])),{},{closePaperWallet:function(){this.showPaperWallet&&this.$router.go(-1),this.showPaperWallet=!1},setup:function(){this.processNetworkTokens(),this.subscribeToBlockNumber()},checkNetwork:function(){var e=this;return Object(r["a"])(Object(s["a"])().mark((function n(){var t;return Object(s["a"])().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Object(y["a"])(e.network.type.chainID,e.identifier);case 2:t=n.sent,e.setValidNetwork(t);case 4:case"end":return n.stop()}}),n)})))()},processNetworkTokens:function(){var e=this;this.network.type.tokens.then((function(n){var t=new Map;n.forEach((function(e){t.set(e.address.toLowerCase(),e)})),e.setNetworkTokens(t)}))},setTokensAndBalance:function(){var e;null!==(e=this.coinGeckoTokens)&&void 0!==e&&e.get?this.setTokenAndEthBalance():this.setTokens([])},checkAndSetBaseFee:function(e){e?this.setBaseFeePerGas(Object(l["toBN"])(e)):this.setBaseFeePerGas(Object(l["toBN"])("0")),this.updateGasPrice()},subscribeToBlockNumber:Object(p["debounce"])((function(){var e=this;this.web3.eth.getBlockNumber().then((function(n){e.setBlockNumber(n),e.web3.eth.getBlock(n).then((function(n){n&&e.checkAndSetBaseFee(n.baseFeePerGas),e.web3.eth.subscribe("newBlockHeaders").on("data",(function(n){e.isEIP1559SupportedNetwork&&n.baseFeePerGas&&e.checkAndSetBaseFee(Object(l["toBN"])(n.baseFeePerGas)),e.setBlockNumber(n.number)})).on("error",(function(e){Object(h["d"])(e&&"Load failed"===e.message?"eth_subscribe is not supported. Please make sure your provider supports eth_subscribe":"Network Subscription Error: Please wait a few seconds before continuing.",{},h["a"])}))}))}))}),500),web3Listeners:function(){var e;null!==(e=window.ethereum)&&void 0!==e&&e.on&&(window.ethereum.on("chainChanged",this.findAndSetNetwork),window.ethereum.on("accountsChanged",this.setWeb3Account))},findAndSetNetwork:function(){var e=this;return Object(r["a"])(Object(s["a"])().mark((function n(){var t,i,a;return Object(s["a"])().wrap((function(n){while(1)switch(n.prev=n.next){case 0:if(!window.ethereum||e.instance.identifier!==T["a"].WEB3_WALLET){n.next=29;break}return n.next=3,null===(t=window.ethereum)||void 0===t?void 0:t.request({method:"eth_chainId"});case 3:if(i=n.sent,a=Object.values(f["a"]).find((function(e){if(Object(l["toBN"])(i).eq(Object(l["toBN"])(e[0].type.chainID)))return e})),!window.ethereum.isMetaMask){n.next=28;break}if(n.prev=6,!a){n.next=19;break}return n.next=10,e.setNetwork({network:a[0],walletType:e.instance.identifier});case 10:return n.next=12,e.setWeb3Instance(window.ethereum);case 12:e.setTokensAndBalance(),e.setValidNetwork(!0),e.trackNetworkSwitch(a[0].type.name),e.$emit("newNetwork"),Object(h["d"])("Switched network to: ".concat(a[0].type.name),{},h["c"]),n.next=21;break;case 19:e.setValidNetwork(!1),Object(h["d"])("Current wallet's network is unsupported",{},h["a"]);case 21:n.next=26;break;case 23:n.prev=23,n.t0=n["catch"](6),Object(h["d"])("There was an error switching networks",{},h["a"]);case 26:n.next=29;break;case 28:Object(h["d"])("Can't find matching nodes for selected MetaMask node! MetaMask may not function properly. Please select a supported node",{},h["e"]);case 29:case"end":return n.stop()}}),n,null,[[6,23]])})))()},setWeb3Account:function(e){var n=new u.a(window.ethereum),t=new w["h"](e[0]);this.setWallet([t,n.currentProvider])}})},P=O,A=(t("68ba"),t("2877")),B=Object(A["a"])(P,i,a,!1,null,"5c7071ae",null);n["default"]=B.exports},ce65:function(e,n,t){}}]);
//# sourceMappingURL=../sourcemaps/js/chunk-714389aa.f7443d17.js.map