{"version":3,"sources":["webpack:///./src/modules/balance/components/TokenAddCustom.vue?e23b","webpack:///./src/modules/balance/components/TokenAddCustom.vue?cf2e","webpack:///src/modules/balance/components/TokenAddCustom.vue","webpack:///./src/modules/balance/components/TokenAddCustom.vue?62b1","webpack:///./src/modules/balance/components/TokenAddCustom.vue","webpack:///./src/core/helpers/addressUtils.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","open","on","reset","staticClass","step","_v","contractAddress","setContractAddress","_e","_l","tkn","idx","key","class","tokenDataToDisplay","isIcon","name","value","_s","isContractAddress","isSymbol","symbolLengthTooLong","nameLengthTooLong","getPlaceholder","setInputValue","staticStyle","nativeOn","$event","apply","arguments","loading","isDisabled","next","staticRenderFns","props","default","type","close","data","customName","customSymbol","token","computed","mapState","mapGetters","hasName","hasSymbol","methods","mapActions","foundSymbol","Toast","ERROR","SUCCESS","checkIfValidAddress","codeHash","isAddress","checkIfTokenExistsAlready","foundToken","findTokenInfo","contract","abiERC20","balance","decimals","denominator","div","times","toString","getTokenBalance","n","component","address","web3","utils","isHexStrict","toChecksumAddress"],"mappings":"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","file":"js/chunk-f46eb17e.a71fd6e6.js","sourcesContent":["export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenAddCustom.vue?vue&type=style&index=0&id=91624004&prod&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-dialog',{attrs:{\"value\":_vm.open,\"max-width\":\"330\"},on:{\"click:outside\":_vm.reset}},[_c('div',{staticClass:\"white pa-7\"},[(_vm.step === 1)?_c('div',{staticClass:\"full-width\"},[_c('div',{staticClass:\"mew-heading-2 mb-10\"},[_vm._v(\"Add custom token\")]),_c('mew-input',{attrs:{\"value\":_vm.contractAddress,\"placeholder\":\"Contract address\"},on:{\"input\":_vm.setContractAddress}})],1):_vm._e(),(_vm.step === 2)?_c('div',{staticClass:\"full-width\"},_vm._l((_vm.tokenDataToDisplay),function(tkn,idx){return _c('div',{key:idx,staticClass:\"mb-9\",class:[\n            _vm.tokenDataToDisplay[idx + 1] &&\n            !_vm.isIcon(_vm.tokenDataToDisplay[idx + 1].name) &&\n            !_vm.tokenDataToDisplay[idx + 1].value\n              ? 'mb-1'\n              : 'mb-9'\n          ],attrs:{\"no-gutters\":\"\"}},[_c('div',{staticClass:\"textLight--text mew-body font-weight-bold align-self-center\"},[_vm._v(\" \"+_vm._s(tkn.name)+\" \")]),_c('div',{staticClass:\"textDark--text\"},[(\n                !_vm.isIcon(tkn.name) &&\n                !_vm.isContractAddress(tkn.name) &&\n                !_vm.isSymbol(tkn.name) &&\n                tkn.value\n              )?_c('span',[_vm._v(\" \"+_vm._s(tkn.value)+\" \")]):_vm._e(),(_vm.isContractAddress(tkn.name))?_c('mew-transform-hash',{attrs:{\"justify-start\":\"\",\"hash\":tkn.value}}):_vm._e(),(_vm.isIcon(tkn.name) && tkn.value)?_c('img',{attrs:{\"height\":\"24px\",\"width\":\"23.5px\",\"src\":tkn.value,\"alt\":\"token icon\"}}):_vm._e(),(_vm.isIcon(tkn.name) && !tkn.value)?_c('div',{staticClass:\"token-placeholder mew-caption d-flex align-center justify-center\"},[_vm._v(\" NA \")]):_vm._e(),((!_vm.isIcon(tkn.name) && !tkn.value) || _vm.isSymbol(tkn.name))?_c('mew-input',{class:_vm.isSymbol(tkn.name) ? 'mt-0 mb-n4' : 'mb-n8',attrs:{\"id\":idx,\"error-messages\":idx === 3 ? _vm.symbolLengthTooLong : _vm.nameLengthTooLong,\"value\":tkn.value,\"placeholder\":_vm.getPlaceholder(tkn.name)},on:{\"input\":_vm.setInputValue}}):_vm._e()],1)])}),0):_vm._e(),_c('div',{staticClass:\"d-flex align-center mt-5\"},[_c('mew-button',{staticClass:\"flex-grow-1 mr-1\",staticStyle:{\"flex-basis\":\"0\"},attrs:{\"btn-size\":\"large\",\"btn-style\":\"outline\",\"title\":\"Cancel\"},nativeOn:{\"click\":function($event){return _vm.reset.apply(null, arguments)}}}),_c('mew-button',{staticClass:\"flex-grow-1 ml-1\",staticStyle:{\"flex-basis\":\"0\"},attrs:{\"btn-size\":\"large\",\"loading\":_vm.loading,\"disabled\":_vm.isDisabled,\"title\":_vm.step === 1 ? 'Next' : 'Add Token'},nativeOn:{\"click\":function($event){return _vm.next.apply(null, arguments)}}})],1)])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <!-- ===================================================================================== -->\n    <!-- Add Custom Token Overlay -->\n    <!-- ===================================================================================== -->\n    <v-dialog :value=\"open\" max-width=\"330\" @click:outside=\"reset\">\n      <div class=\"white pa-7\">\n        <div v-if=\"step === 1\" class=\"full-width\">\n          <div class=\"mew-heading-2 mb-10\">Add custom token</div>\n          <mew-input\n            :value=\"contractAddress\"\n            placeholder=\"Contract address\"\n            @input=\"setContractAddress\"\n          />\n        </div>\n\n        <!-- ============================================================================= -->\n        <!-- Step two: display token info -->\n        <!-- adds mb-9 for basic info but will add mb-1 if there -->\n        <!-- are mew inputs (since there is extra spacing on bottom for mew inputs -->\n        <!-- I had to do it this way to center everything -->\n        <!-- but TODO: find a better way to do this) -->\n        <!-- ============================================================================= -->\n        <div v-if=\"step === 2\" class=\"full-width\">\n          <div\n            v-for=\"(tkn, idx) in tokenDataToDisplay\"\n            :key=\"idx\"\n            no-gutters\n            class=\"mb-9\"\n            :class=\"[\n              tokenDataToDisplay[idx + 1] &&\n              !isIcon(tokenDataToDisplay[idx + 1].name) &&\n              !tokenDataToDisplay[idx + 1].value\n                ? 'mb-1'\n                : 'mb-9'\n            ]\"\n          >\n            <!-- =================================================== -->\n            <!-- token info title -->\n            <!-- =================================================== -->\n            <div\n              class=\"textLight--text mew-body font-weight-bold align-self-center\"\n            >\n              {{ tkn.name }}\n            </div>\n            <div class=\"textDark--text\">\n              <!-- ============================================================================= -->\n              <!-- displays all token values if it is there except for icon and contract address -->\n              <!-- ============================================================================= -->\n              <span\n                v-if=\"\n                  !isIcon(tkn.name) &&\n                  !isContractAddress(tkn.name) &&\n                  !isSymbol(tkn.name) &&\n                  tkn.value\n                \"\n              >\n                {{ tkn.value }}\n              </span>\n\n              <!-- ============================================================================= -->\n              <!-- transform hash for contract address incase theres not -->\n              <!-- enough space -->\n              <!-- ============================================================================= -->\n              <mew-transform-hash\n                v-if=\"isContractAddress(tkn.name)\"\n                justify-start\n                :hash=\"tkn.value\"\n              />\n\n              <!-- ============================================================================= -->\n              <!-- displays token icon img or placeholder if there is no src -->\n              <!-- ============================================================================= -->\n              <img\n                v-if=\"isIcon(tkn.name) && tkn.value\"\n                height=\"24px\"\n                width=\"23.5px\"\n                :src=\"tkn.value\"\n                alt=\"token icon\"\n              />\n              <div\n                v-if=\"isIcon(tkn.name) && !tkn.value\"\n                class=\"token-placeholder mew-caption d-flex align-center justify-center\"\n              >\n                NA\n              </div>\n\n              <!-- ============================================================================= -->\n              <!-- displays input to enter values if there is no name or symbol -->\n              <!-- ============================================================================= -->\n              <mew-input\n                v-if=\"(!isIcon(tkn.name) && !tkn.value) || isSymbol(tkn.name)\"\n                :id=\"idx\"\n                :error-messages=\"\n                  idx === 3 ? symbolLengthTooLong : nameLengthTooLong\n                \"\n                :class=\"isSymbol(tkn.name) ? 'mt-0 mb-n4' : 'mb-n8'\"\n                :value=\"tkn.value\"\n                :placeholder=\"getPlaceholder(tkn.name)\"\n                @input=\"setInputValue\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <!-- =================================================== -->\n        <!-- Add token / next button -->\n        <!-- =================================================== -->\n        <div class=\"d-flex align-center mt-5\">\n          <mew-button\n            class=\"flex-grow-1 mr-1\"\n            style=\"flex-basis: 0\"\n            btn-size=\"large\"\n            btn-style=\"outline\"\n            title=\"Cancel\"\n            @click.native=\"reset\"\n          />\n          <mew-button\n            class=\"flex-grow-1 ml-1\"\n            style=\"flex-basis: 0\"\n            btn-size=\"large\"\n            :loading=\"loading\"\n            :disabled=\"isDisabled\"\n            :title=\"step === 1 ? 'Next' : 'Add Token'\"\n            @click.native=\"next\"\n          />\n        </div>\n      </div>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters, mapActions } from 'vuex';\nimport { debounce } from 'lodash';\nimport BigNumber from 'bignumber.js';\n\nimport abiERC20 from '../handlers/abiERC20';\nimport { ERROR, SUCCESS, Toast } from '@/modules/toast/handler/handlerToast';\nimport { isAddress } from '@/core/helpers/addressUtils';\nimport { formatFloatingPointValue } from '@/core/helpers/numberFormatHelper';\n\nexport default {\n  props: {\n    open: {\n      default: false,\n      type: Boolean\n    },\n    close: {\n      default: () => {},\n      type: Function\n    }\n  },\n  data() {\n    return {\n      contractAddress: '',\n      customName: '',\n      customSymbol: '',\n      symbolLengthTooLong: '',\n      nameLengthTooLong: '',\n      loading: false,\n      step: 1,\n      token: {}\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['web3', 'address']),\n    ...mapGetters('wallet', ['tokensList']),\n    ...mapGetters('external', ['contractToToken']),\n    ...mapGetters('custom', ['customTokens']),\n    ...mapGetters('global', ['getFiatValue']),\n    /**\n     * @returns token data to display on form\n     */\n    tokenDataToDisplay() {\n      return [\n        { name: 'Contract', value: this.contractAddress },\n        { name: 'Icon', value: this.token.img },\n        { name: 'Name', value: this.token.name },\n        { name: 'Symbol', value: this.token.symbol }\n      ];\n    },\n    /**\n     * @returns boolean\n     * disables button if there are error messages and no values\n     */\n    isDisabled() {\n      return (\n        this.loading ||\n        (this.step === 1 && !this.contractAddress) ||\n        (this.step === 1 && !isAddress(this.contractAddress)) ||\n        (this.step === 2 &&\n          (this.symbolLengthTooLong.length > 0 ||\n            this.nameLengthTooLong.length > 0 ||\n            !this.hasName ||\n            !this.hasSymbol))\n      );\n    },\n    /**\n     * checks if there is token name\n     */\n    hasName() {\n      return this.tokenDataToDisplay[2].value || this.customName;\n    },\n    /**\n     * checks if there is symbol name\n     */\n    hasSymbol() {\n      return this.customSymbol;\n    }\n  },\n  methods: {\n    ...mapActions('custom', ['setCustomToken']),\n    /**\n     * set input value for custom name (idx = 2) or symbol (idx = 3)\n     * if symbol then will double check if it is already in the list\n     * will throw toast error if so\n     * also will set error messages if value lengths are too long\n     */\n    setInputValue: debounce(function (value, idx) {\n      if (idx == 3) {\n        if (value && value.length > 8) {\n          this.symbolLengthTooLong = 'Symbol cannot exceed 8 characters';\n          return;\n        }\n        this.symbolLengthTooLong = '';\n        let foundSymbol = false;\n\n        this.customTokens.concat(this.tokensList).find(token => {\n          if (value === token.symbol) {\n            foundSymbol = true;\n            return;\n          }\n        });\n        if (foundSymbol) {\n          this.customSymbol = '';\n          Toast(\n            'A token with the symbol ' + value + ' already exists.',\n            {},\n            ERROR\n          );\n          return;\n        }\n        this.customSymbol = value;\n      } else {\n        if (value && value.length > 24) {\n          this.nameLengthTooLong = 'Name cannot exceed 24 characters';\n          return;\n        }\n        this.nameLengthTooLong = '';\n        this.customName = value;\n      }\n    }, 100),\n    /**\n     * @returns if token info displays contract address\n     */\n    isContractAddress(name) {\n      return name === this.tokenDataToDisplay[0].name;\n    },\n    /**\n     * @returns if token info displays icon\n     */\n    isIcon(name) {\n      return name === this.tokenDataToDisplay[1].name;\n    },\n    /**\n     * @returns if symbol info displays icon\n     */\n    isSymbol(name) {\n      return name === this.tokenDataToDisplay[3].name;\n    },\n    /**\n     * @returns mew input placeholders\n     * if there is no value for name or symbol\n     */\n    getPlaceholder(name) {\n      if (name === this.tokenDataToDisplay[2].name) {\n        return 'Enter the token’s name';\n      }\n      return 'Enter up to 8 characters';\n    },\n    /**\n     * resets data and closes overlay on close button click\n     */\n    reset() {\n      this.close();\n      this.step = 1;\n      this.token = {};\n      this.contractAddress = '';\n      this.customName = '';\n      this.customSymbol = '';\n      this.symbolLengthTooLong = '';\n      this.nameLengthTooLong = '';\n      this.loading = false;\n    },\n    /**\n     * next (step one) and add token methods (step two) for button\n     * on step one, it will check if contract address is valid\n     * on step two, it will add the custom token\n     */\n    next() {\n      if (this.step === 1) {\n        this.loading = true;\n        this.checkIfValidAddress();\n        return;\n      }\n      this.token.name = !this.token.name ? this.customName : this.token.name;\n      this.token.symbol = this.customSymbol || this.token.symbol;\n      this.token.contract = this.contractAddress;\n      this.setCustomToken(this.token);\n      Toast(\n        'The token ' + this.token.name + ' was added to your token list!',\n        {},\n        SUCCESS\n      );\n      this.reset();\n    },\n    /**\n     * sets the contract address that user inputs\n     * (index 0 of token data)\n     */\n    setContractAddress(address) {\n      this.contractAddress = address;\n    },\n    /**\n     * checks if the contract address is valid\n     * if it is then it will check if it already exists in the tokenList\n     * otherwise it will throw toast error\n     */\n    async checkIfValidAddress() {\n      const codeHash = await this.web3.eth.getCode(this.contractAddress);\n      if (\n        this.contractAddress &&\n        isAddress(this.contractAddress) &&\n        codeHash !== '0x'\n      ) {\n        this.checkIfTokenExistsAlready();\n      } else {\n        this.loading = false;\n        this.contractAddress = '';\n        Toast('This is not a valid contract address', {}, ERROR);\n      }\n    },\n    /**\n     * checks if the token contract already exists in tokenList\n     * will return toast error if it does\n     * otherwise it will get more info\n     */\n    checkIfTokenExistsAlready() {\n      let foundToken = false;\n      this.customTokens.concat(this.tokensList).find(token => {\n        if (\n          this.contractAddress.toLowerCase() === token.contract?.toLowerCase()\n        ) {\n          foundToken = true;\n        }\n      });\n      if (foundToken) {\n        this.contractAddress = '';\n        this.loading = false;\n        Toast('A token with this address already exists!', {}, ERROR);\n      } else {\n        this.findTokenInfo();\n      }\n    },\n    /**\n     * finds more token info\n     * will first use web3 to get the contract and\n     * then use getter contractToToken to check for more info and calculate correct usd balance\n     * if not will check web3 to get name and symbol\n     * then will assign the correct values to the token object.\n     * if it enters the catch then will just assign contract address.\n     */\n    async findTokenInfo() {\n      const contract = new this.web3.eth.Contract(\n        abiERC20,\n        this.contractAddress\n      );\n      this.token = this.contractToToken(this.contractAddress) || {};\n      try {\n        const balance = await contract.methods.balanceOf(this.address).call(),\n          decimals = await contract.methods.decimals().call();\n        if (this.token) {\n          const denominator = new BigNumber(10).pow(decimals);\n          this.token.usdBalance = new BigNumber(balance)\n            .div(denominator)\n            .times(this.token.price)\n            .toString();\n          this.token.usdBalancef = this.getFiatValue(this.token.usdBalance)\n            ? this.getFiatValue(this.token.usdBalance)\n            : this.getFiatValue(0);\n        } else {\n          this.token.name = await contract.methods.name().call();\n          this.token.symbol = await contract.methods.symbol().call();\n          this.token.usdBalancef = '0.00';\n          this.token.contract = this.contractAddress;\n        }\n        this.token.decimals = parseInt(decimals);\n        this.token.balance = balance;\n        this.token.balancef = this.getTokenBalance(balance, decimals).value;\n        this.loading = false;\n        this.step = 2;\n      } catch {\n        this.token.contract = this.contractAddress;\n        this.token.balancef = '0';\n        this.token.usdBalancef = '0.00';\n        this.loading = false;\n        this.step = 2;\n      }\n    },\n    /**\n     * gets token balance by dividing by token decimals\n     */\n    getTokenBalance(balance, decimals) {\n      let n = new BigNumber(balance);\n      if (decimals) {\n        n = n.div(new BigNumber(10).pow(decimals));\n        n = formatFloatingPointValue(n);\n      }\n      return n;\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n.token-placeholder {\n  color: var(--v-textMedium-base);\n  background-color: var(--v-disabledMedium-base);\n  border-radius: 24px;\n  height: 24px;\n  width: 24px;\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenAddCustom.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TokenAddCustom.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TokenAddCustom.vue?vue&type=template&id=91624004&scoped=true&\"\nimport script from \"./TokenAddCustom.vue?vue&type=script&lang=js&\"\nexport * from \"./TokenAddCustom.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TokenAddCustom.vue?vue&type=style&index=0&id=91624004&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"91624004\",\n  null\n  \n)\n\nexport default component.exports","import web3 from 'web3';\n\nconst isAddress = address => {\n  return (\n    address && web3.utils.isHexStrict(address) && web3.utils.isAddress(address)\n  );\n};\nconst toChecksumAddress = address => {\n  return web3.utils.toChecksumAddress(address);\n};\nexport { isAddress, toChecksumAddress };\n"],"sourceRoot":""}