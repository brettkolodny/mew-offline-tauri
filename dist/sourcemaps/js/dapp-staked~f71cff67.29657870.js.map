{"version":3,"sources":["webpack:///./src/assets/images/icons/dapps/icon-dapp-stake.svg","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue?3718","webpack:///./src/dapps/staked-dapp/configsRoutes.js","webpack:///src/dapps/staked-dapp/TheStakedLayout.vue","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue?e29b","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue","webpack:///./src/dapps/staked-dapp/handlers/handlerStaked.js","webpack:///./src/dapps/staked-dapp/handlers/configNetworkTypes.js","webpack:///./src/dapps/staked-dapp/handlers/helpers.js","webpack:///./src/dapps/staked-dapp/TheStakedLayout.vue?0864"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","headerImg","header","tabs","activeTab","tabChanged","validNetworks","scopedSlots","_u","key","fn","staticClass","_v","_s","totalStaked","currentAprFormatted","model","value","callback","$$v","expression","class","loadingValidators","_e","myETHTotalStaked","proxy","getArticle","ref","handlerStaked","apr","startProvision","pollingStatus","on","sendTransaction","txReceipt","pendingTxHash","validators","amount","staticRenderFns","STAKED_ROUTE","STAKED","NAME","PATH","STATUS","name","components","TheWrapperDapp","StakedStepper","StakedStatus","data","title","subtext","subtextClass","route","id","path","computed","mapState","mapGetters","formatFloatingPointValue","isValidNetwork","watch","$route","address","mounted","methods","detactUrlChangeTab","component","ABI_GET_VALIDATORS","inputs","outputs","internalType","type","stateMutability","ABI_GET_FEES","STATUS_TYPES","PENDING","ACTIVE","CREATED","DEPOSITED","FAILED","EXITED","Staked","web3","network","validatorsCount","transactionData","myValidators","endpoint","configNetworkTypes","getTotalStakedAndAPR","getValidators","eth2ContractAddress","depositAddress","depositContract","eth","Contract","get_deposit_count","call","then","lebytes","numValidators","toBN","Buffer","from","substr","reverse","toString","muln","BigNumber","calculateEth2Rewards","totalAtStake","times","toFixed","catch","err","Toast","ERROR","axios","get","resp","reduce","total","val","raw","balanceETH","status","toLowerCase","balance","convertToEth1","plus","response","msg","params","count","post","withdrawalKey","eth2Address","provisioning_request_uuid","startPolling","$t","success","error","uuid","prevReqComplete","interval","setInterval","length","parseInt","transaction","clearInterval","to","batchContract","res","handleError","div","pow","GOERLI","url","etherscanTxUrl","etherscanAddrUrl","ETH","ethvmTxUrl","ethvmAddrUrl","slotTimeInSec","slotsInEpoch","baseRewardFactor","baseRewardsPerEpoch","baseRewardsPropotionalValidators","averageNetworkPctOnline","oneSlotLatePenalty","vaildatorUptime","validatorDeposit","avgSecInYear","epochPerYear","baseGweiRewardFullValidator","offlineEpochGweiPentalty","fullUptimeValidatorRewards","oneEighthReward","rewardAdjModifier","sevenEighthsReward","onlineEpochGweiReward","reward","penalty","netRewardPerYear"],"mappings":"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","file":"js/dapp-staked~f71cff67.29657870.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/icon-dapp-stake.21f5fa37.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('the-wrapper-dapp',{attrs:{\"is-new-header\":true,\"dapp-img\":_vm.headerImg,\"banner-text\":_vm.header,\"tab-items\":_vm.tabs,\"active-tab\":_vm.activeTab,\"external-contents\":\"\",\"on-tab\":_vm.tabChanged,\"valid-networks\":_vm.validNetworks},scopedSlots:_vm._u([{key:\"HeaderBody\",fn:function(){return [_c('v-divider',{staticClass:\"textMedium my-3\"}),_c('div',{staticClass:\"d-flex flex-wrap align-center justify-center\"},[_c('div',{staticClass:\"text-uppercase textMedium--text font-weight-bold\"},[_vm._v(\" Total Staked: \"),_c('span',{staticClass:\"greenPrimary--text\"},[_vm._v(_vm._s(_vm.totalStaked))])]),_c('v-icon',{attrs:{\"color\":\"textMedium\"}},[_vm._v(\"mdi-circle-medium\")]),_c('div',{staticClass:\"text-uppercase textMedium--text font-weight-bold\"},[_vm._v(\" Current APR: \"),_c('span',{staticClass:\"greenPrimary--text\"},[_vm._v(_vm._s(_vm.currentAprFormatted))])])],1),_c('v-btn-toggle',{staticClass:\"d-flex align-center justify-center mt-3 white--text\",attrs:{\"mandatory\":\"\",\"borderless\":\"\",\"active-class\":\"expandHeader font-weight-bold\",\"background-color\":\"transparent\"},model:{value:(_vm.activeTab),callback:function ($$v) {_vm.activeTab=$$v},expression:\"activeTab\"}},[_c('v-btn',{staticClass:\"px-md-9 white--text text-transform--initial\",class:_vm.activeTab === 0 ? 'staked-tab-active' : 'staked-tab-inactive',attrs:{\"color\":\"\"}},[_vm._v(\" New stake \")]),_c('v-btn',{class:[\n          'px-md-9 white--text text-transform--initial d-flex  flex-column align-center',\n          _vm.activeTab === 1 ? 'staked-tab-active' : 'staked-tab-inactive'\n        ],attrs:{\"color\":\"\"}},[_c('div',[_c('div',{class:[\n              'white--text',\n              _vm.activeTab === 1 ? 'font-weight-medium' : ''\n            ]},[_vm._v(\" My stake \")]),(!_vm.loadingValidators)?_c('div',{staticClass:\"mew-caption textLight--text\"},[_vm._v(\" \"+_vm._s(!_vm.loadingValidators ? _vm.myETHTotalStaked : '--')+\" \")]):_vm._e()])])],1)]},proxy:true},{key:\"HeaderRight\",fn:function(){return [_c('div',{staticClass:\"text-right\"},[_c('a',{staticClass:\"greenPrimary--text font-weight-medium text-right\",attrs:{\"href\":_vm.getArticle('stake-eth2-mew-web'),\"target\":\"_blank\"}},[_vm._v(\" New to staking? Learn more \"),_c('v-icon',{staticClass:\"ml-1\",attrs:{\"small\":\"\",\"color\":\"greenPrimary\"}},[_vm._v(\"mdi-open-in-new\")])],1)])]},proxy:true},{key:\"tabContent1\",fn:function(){return [_c('v-sheet',{staticClass:\"mx-auto\",attrs:{\"min-height\":\"500px\",\"max-width\":\"700px\",\"color\":\"transparent\"}},[_c('staked-stepper',{ref:\"stakedStepper\",attrs:{\"current-apr\":_vm.handlerStaked.apr,\"start-provision\":_vm.startProvision,\"polling-status\":_vm.pollingStatus},on:{\"readyToStake\":_vm.sendTransaction}})],1)]},proxy:true},{key:\"tabContent2\",fn:function(){return [_c('v-sheet',{staticClass:\"py-13 mx-auto\",attrs:{\"min-height\":\"500px\",\"max-width\":\"700px\",\"color\":\"transparent\"}},[_c('staked-status',{attrs:{\"tx-receipt\":_vm.handlerStaked.txReceipt,\"pending-hash\":_vm.pendingTxHash,\"validators\":_vm.validators,\"loading\":_vm.loadingValidators,\"amount\":_vm.amount}})],1)]},proxy:true}])})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","const STAKED_ROUTE = {\n  STAKED: { NAME: 'Staked', PATH: 'staked' },\n  STATUS: {\n    NAME: 'StakedStatus',\n    PATH: 'status'\n  }\n};\n\nexport { STAKED_ROUTE };\n","<template>\n  <!--\n    ===================================================\n    The Staked Layout\n    ===================================================\n    -->\n  <the-wrapper-dapp\n    :is-new-header=\"true\"\n    :dapp-img=\"headerImg\"\n    :banner-text=\"header\"\n    :tab-items=\"tabs\"\n    :active-tab=\"activeTab\"\n    external-contents\n    :on-tab=\"tabChanged\"\n    :valid-networks=\"validNetworks\"\n  >\n    <!--\n    ===================================================\n    The Staked Header/Banner\n    ===================================================\n    -->\n    <template #HeaderBody>\n      <v-divider class=\"textMedium my-3\" />\n      <div class=\"d-flex flex-wrap align-center justify-center\">\n        <div class=\"text-uppercase textMedium--text font-weight-bold\">\n          Total Staked:\n          <span class=\"greenPrimary--text\">{{ totalStaked }}</span>\n        </div>\n        <v-icon color=\"textMedium\">mdi-circle-medium</v-icon>\n        <div class=\"text-uppercase textMedium--text font-weight-bold\">\n          Current APR:\n          <span class=\"greenPrimary--text\">{{ currentAprFormatted }}</span>\n        </div>\n      </div>\n      <!--\n    ===================================================\n    Menu tabs\n    ===================================================\n    -->\n      <v-btn-toggle\n        v-model=\"activeTab\"\n        class=\"d-flex align-center justify-center mt-3 white--text\"\n        mandatory\n        borderless\n        active-class=\"expandHeader font-weight-bold\"\n        background-color=\"transparent\"\n      >\n        <v-btn\n          class=\"px-md-9 white--text text-transform--initial\"\n          :class=\"activeTab === 0 ? 'staked-tab-active' : 'staked-tab-inactive'\"\n          color=\"\"\n        >\n          New stake\n        </v-btn>\n        <v-btn\n          :class=\"[\n            'px-md-9 white--text text-transform--initial d-flex  flex-column align-center',\n            activeTab === 1 ? 'staked-tab-active' : 'staked-tab-inactive'\n          ]\"\n          color=\"\"\n        >\n          <div>\n            <div\n              :class=\"[\n                'white--text',\n                activeTab === 1 ? 'font-weight-medium' : ''\n              ]\"\n            >\n              My stake\n            </div>\n            <div v-if=\"!loadingValidators\" class=\"mew-caption textLight--text\">\n              {{ !loadingValidators ? myETHTotalStaked : '--' }}\n            </div>\n          </div>\n        </v-btn>\n      </v-btn-toggle>\n    </template>\n    <!--\n    ===================================================\n    Info Link\n    ===================================================\n    -->\n    <template #HeaderRight>\n      <div class=\"text-right\">\n        <a\n          :href=\"getArticle('stake-eth2-mew-web')\"\n          target=\"_blank\"\n          class=\"greenPrimary--text font-weight-medium text-right\"\n        >\n          New to staking? Learn more\n          <v-icon class=\"ml-1\" small color=\"greenPrimary\"\n            >mdi-open-in-new</v-icon\n          >\n        </a>\n      </div>\n    </template>\n\n    <!--\n    ===================================================\n    New Stake Tab\n    ===================================================\n    -->\n    <template #tabContent1>\n      <v-sheet\n        min-height=\"500px\"\n        max-width=\"700px\"\n        color=\"transparent\"\n        class=\"mx-auto\"\n      >\n        <staked-stepper\n          ref=\"stakedStepper\"\n          :current-apr=\"handlerStaked.apr\"\n          :start-provision=\"startProvision\"\n          :polling-status=\"pollingStatus\"\n          @readyToStake=\"sendTransaction\"\n        />\n      </v-sheet>\n    </template>\n    <!--\n    ===================================================\n    My Stake tab\n    ===================================================\n    -->\n    <template #tabContent2>\n      <v-sheet\n        min-height=\"500px\"\n        max-width=\"700px\"\n        color=\"transparent\"\n        class=\"py-13 mx-auto\"\n      >\n        <staked-status\n          :tx-receipt=\"handlerStaked.txReceipt\"\n          :pending-hash=\"pendingTxHash\"\n          :validators=\"validators\"\n          :loading=\"loadingValidators\"\n          :amount=\"amount\"\n        />\n      </v-sheet>\n    </template>\n  </the-wrapper-dapp>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport { SUPPORTED_NETWORKS } from './handlers/supportedNetworks';\nimport { STAKED_ROUTE } from './configsRoutes';\nimport {\n  formatPercentageValue,\n  formatFloatingPointValue\n} from '@/core/helpers/numberFormatHelper';\n\nimport handlerStaked from './handlers/handlerStaked';\nexport default {\n  name: 'TheStakedLayout',\n  components: {\n    TheWrapperDapp: () => import('@/core/components/TheWrapperDapp'),\n    StakedStepper: () => import('./components/staked-stepper/StakedStepper'),\n    StakedStatus: () => import('./components/StakedStatus')\n  },\n  data() {\n    return {\n      validNetworks: SUPPORTED_NETWORKS,\n      headerImg: require('@/assets/images/icons/dapps/icon-dapp-stake.svg'),\n      amount: 0,\n      header: {\n        title: 'Ethereum 2.0 staking',\n        subtext:\n          'Stake on Ethereum 2.0 and earn continuous rewards for providing a public good to the community.',\n        subtextClass: 'textMedium--text'\n      },\n      activeTab: 0,\n      handlerStaked: {},\n      tabs: [\n        {\n          name: 'Stake',\n          route: { name: STAKED_ROUTE.STAKED.NAME },\n          id: 0\n        },\n        {\n          name: 'Status',\n          route: {\n            name: STAKED_ROUTE.STATUS.NAME,\n            path: STAKED_ROUTE.STATUS.PATH\n          },\n          id: 1\n        }\n      ]\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['web3', 'address']),\n    ...mapGetters('global', ['network']),\n    ...mapGetters('article', ['getArticle']),\n    /**\n     * Total staked by user\n     * @returns string\n     */\n    myETHTotalStaked() {\n      return (\n        formatFloatingPointValue(this.handlerStaked.myETHTotalStaked).value +\n        ' ETH'\n      );\n    },\n    /**\n     * Total Staked\n     * @returns string\n     */\n    totalStaked() {\n      return (\n        formatFloatingPointValue(this.handlerStaked.totalStaked).value + ' ETH'\n      );\n    },\n    /**\n     * Current APR Formatted\n     * @returns string\n     */\n    currentAprFormatted() {\n      if (this.handlerStaked.apr > 0) {\n        return formatPercentageValue(this.handlerStaked.apr).value;\n      }\n      return '--';\n    },\n    /**\n     * Gets the status after polling (happens on step4)\n     * @returns object\n     */\n    pollingStatus() {\n      return this.handlerStaked.pollingStatus;\n    },\n    /**\n     * Gets the clients validators\n     * @returns array\n     */\n    validators() {\n      return this.handlerStaked.myValidators;\n    },\n    /**\n     * Checks if validators are loading\n     * @returns boolean\n     */\n    loadingValidators() {\n      return this.handlerStaked.loadingValidators;\n    },\n    /**\n     * Checks for pending tx hash\n     * @returns string\n     */\n    pendingTxHash() {\n      return this.handlerStaked.pendingTxHash;\n    },\n    isValidNetwork() {\n      const chainID = this.network.type.chainID;\n      const validChain = this.validNetworks.filter(\n        item => item.chainID === chainID\n      );\n      return validChain.length > 0;\n    }\n  },\n  watch: {\n    $route() {\n      this.detactUrlChangeTab();\n    },\n    /**\n     * @watches pendingTxHash (comes after send transaction)\n     * if it gets set then go to staked status\n     */\n    pendingTxHash(newVal) {\n      if (newVal !== '') {\n        this.activeTab = 1;\n      }\n      if (this.$refs.stakedStepper) {\n        this.$refs.stakedStepper.reset();\n      }\n    },\n    /*\n    - watches for address state change\n    - updates handlerStaked with new address\n    - if user is currently onStep within the stakeStepper component, it will run the reset function\n    */\n    address(newVal) {\n      this.handlerStaked.address = newVal;\n      if (this.$refs.stakedStepper) {\n        this.$refs.stakedStepper.reset();\n      }\n    }\n  },\n  mounted() {\n    /**\n     * Check url and change tab on load\n     */\n    this.detactUrlChangeTab();\n\n    /**\n     * Initiate Stake Handler\n     */\n    if (this.isValidNetwork) {\n      this.handlerStaked = new handlerStaked(\n        this.web3,\n        this.network,\n        this.address\n      );\n    }\n  },\n  methods: {\n    detactUrlChangeTab() {\n      const currentRoute = this.$route.name;\n      if (currentRoute === STAKED_ROUTE.STATUS.NAME) {\n        this.activeTab = this.tabs[1].id;\n      } else {\n        this.activeTab = this.tabs[0].id;\n      }\n    },\n    tabChanged(tab) {\n      this.activeTab = tab;\n    },\n    /**\n     * Start provisioning\n     */\n    startProvision(params) {\n      return this.handlerStaked.startProvision(params);\n    },\n    /**\n     * Send transaction to confirm staking\n     * and set amount value for staked status\n     */\n    sendTransaction(amountETH) {\n      this.handlerStaked.sendTransaction();\n      this.amount = amountETH;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.staked-tab-inactive {\n  background-color: rgba(0, 0, 0, 0.24) !important;\n}\n.staked-tab-active::before {\n  opacity: 0 !important;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheStakedLayout.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheStakedLayout.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TheStakedLayout.vue?vue&type=template&id=d8d06fae&scoped=true&\"\nimport script from \"./TheStakedLayout.vue?vue&type=script&lang=js&\"\nexport * from \"./TheStakedLayout.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TheStakedLayout.vue?vue&type=style&index=0&id=d8d06fae&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d8d06fae\",\n  null\n  \n)\n\nexport default component.exports","import axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport configNetworkTypes from './configNetworkTypes';\nimport calculateEth2Rewards from './helpers';\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\nimport { toBN } from 'web3-utils';\nimport handleError from '@/modules/confirmation/handlers/errorHandler';\n\n/**\n * ABI to get fees\n * from batch contract\n */\nconst ABI_GET_VALIDATORS = [\n  {\n    inputs: [],\n    name: 'get_deposit_count',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\nconst ABI_GET_FEES = [\n  {\n    inputs: [\n      {\n        internalType: 'uint256',\n        name: 'numValidators',\n        type: 'uint256'\n      }\n    ],\n    name: 'getFees',\n    outputs: [\n      {\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }\n    ],\n    stateMutability: 'view',\n    type: 'function'\n  }\n];\n\n/**\n * Validator status types\n */\nconst STATUS_TYPES = {\n  PENDING: 'pending',\n  ACTIVE: 'active',\n  CREATED: 'created',\n  DEPOSITED: 'deposited',\n  FAILED: 'failed',\n  EXITED: 'exited'\n};\n\nexport { ABI_GET_FEES, STATUS_TYPES };\nexport default class Staked {\n  constructor(web3, network, address) {\n    /**\n     * set up the variables\n     */\n    this.web3 = web3;\n    this.network = network;\n    this.address = address;\n    this.totalStaked = '';\n    this.apr = '';\n    this.validatorsCount = '';\n    this.pollingStatus = {};\n    this.transactionData = {};\n    this.myValidators = [];\n    this.loadingValidators = false;\n    this.myETHTotalStaked = 0;\n    this.pendingTxHash = '';\n    this.txReceipt = false;\n    this.endpoint = configNetworkTypes.network[this.network.type.name].endpoint;\n    /**\n     * get the initial data (total staked, apr, validators)\n     */\n    this.getTotalStakedAndAPR();\n    this.getValidators();\n  }\n  /**\n   * Get the total staked and current APR\n   */\n  getTotalStakedAndAPR() {\n    this.eth2ContractAddress =\n      configNetworkTypes.network[this.network.type.name].depositAddress;\n    const depositContract = new this.web3.eth.Contract(\n      ABI_GET_VALIDATORS,\n      this.eth2ContractAddress\n    );\n    depositContract.methods\n      .get_deposit_count()\n      .call()\n      .then(lebytes => {\n        const numValidators = toBN(\n          '0x' + Buffer.from(lebytes.substr(2), 'hex').reverse().toString('hex')\n        );\n        this.totalStaked = numValidators.muln(32).toString();\n        this.apr = new BigNumber(\n          calculateEth2Rewards({ totalAtStake: this.totalStaked })\n        )\n          .times(100)\n          .toFixed();\n      })\n      .catch(err => {\n        Toast(err, {}, ERROR);\n      });\n  }\n  /**\n   * Get clients validators\n   * and get clients total staked\n   */\n  getValidators() {\n    this.loadingValidators = true;\n    return axios\n      .get(`${this.endpoint}/history?address=${this.address}`, {\n        header: {\n          'Content-Type': 'application/json'\n        }\n      })\n      .then(resp => {\n        this.myValidators = resp.data;\n        this.myETHTotalStaked = resp.data.reduce((total, val) => {\n          const raw = val.raw[0];\n          const balanceETH =\n            raw.status.toLowerCase() === STATUS_TYPES.ACTIVE && raw.balance\n              ? this.convertToEth1(raw.balance).toFixed()\n              : 0;\n          return new BigNumber(total).plus(balanceETH);\n        }, 0);\n        this.loadingValidators = false;\n      })\n      .catch(err => {\n        this.loadingValidators = false;\n        this.myValidators = [];\n        if (\n          err.response &&\n          err.response.status === 404 &&\n          err.response.data.msg === 'No matching history found'\n        ) {\n          return;\n        }\n        Toast(err, {}, ERROR);\n      });\n  }\n  /**\n   * Start provisioning and get the\n   * provisoning request uuid to start polling\n   */\n  async startProvision(params) {\n    this.validatorsCount = params.count;\n    await axios\n      .post(\n        this.endpoint + '/provision',\n        {\n          address: this.address,\n          withdrawalKey: params.eth2Address,\n          validatorsCount: params.count\n        },\n        {\n          header: {\n            'Content-Type': 'application/json'\n          }\n        }\n      )\n      .then(response => {\n        return response && response.data.provisioning_request_uuid\n          ? this.startPolling(response.data.provisioning_request_uuid)\n          : Toast(this.$t('dappsStaked.error-try-again'), {}, ERROR);\n      })\n      .catch(err => {\n        this.pollingStatus = { success: false, error: err };\n      });\n  }\n  /**\n   * Start polling every 5000 ms\n   * sets pollingStatus for UI\n   */\n  startPolling(uuid) {\n    let prevReqComplete = true;\n    const interval = setInterval(() => {\n      if (!prevReqComplete) return;\n      prevReqComplete = false;\n      return axios\n        .get(`${this.endpoint}/status?provisioning_request_uuid=${uuid}`, {\n          header: {\n            'Content-Type': 'application/json'\n          }\n        })\n        .then(response => {\n          prevReqComplete = true;\n          if (\n            response &&\n            response.data &&\n            response.data.raw.length === parseInt(this.validatorsCount)\n          ) {\n            this.pollingStatus = { success: true };\n            this.transactionData = response.data.transaction;\n            clearInterval(interval);\n          }\n        })\n        .catch(err => {\n          prevReqComplete = true;\n          if (\n            (err.response &&\n              err.response.status === 424 &&\n              err.response.data.msg ===\n                'Not all validators have been provisioned') ||\n            (err.response &&\n              err.response.status === 404 &&\n              err.response.data.msg ===\n                'Requested provisioning_request_uuid not found')\n          ) {\n            return;\n          }\n          this.pollingStatus = { success: false, error: err.response };\n        });\n    }, 5000);\n  }\n  /**\n   * Send tx to confirm staking\n   */\n  sendTransaction() {\n    this.transactionData.from = this.address;\n    this.transactionData.to =\n      configNetworkTypes.network[this.network.type.name].batchContract;\n    this.web3.eth\n      .sendTransaction(this.transactionData)\n      .on('transactionHash', res => {\n        this.pendingTxHash = res;\n      })\n      .on('receipt', () => {\n        this.txReceipt = true;\n      })\n      .catch(err => {\n        const error = handleError(err);\n        if (error) Toast(err, {}, ERROR);\n      });\n  }\n  /**\n   * @returns BigNumber\n   * Converts the unit to ETH1 from ETH2\n   */\n  convertToEth1(balance) {\n    return new BigNumber(balance).div(new BigNumber(10).pow(9));\n  }\n}\n","export default {\n  network: {\n    GOERLI: {\n      depositAddress: '0x8c5fecdc472e27bc447696f431e425d02dd46a8c',\n      endpoint: 'https://stakedtest.mewapi.io',\n      batchContract: '0xC2a689783Af563e79F87CbFA3a6B14E6E2e42b20',\n      url: 'https://beaconscan.com/pyrmont/validator/',\n      etherscanTxUrl: 'https://goerli.etherscan.io/tx/',\n      etherscanAddrUrl: 'https://goerli.etherscan.io/address/'\n    },\n    ETH: {\n      depositAddress: '0x00000000219ab540356cBB839Cbe05303d7705Fa',\n      endpoint: 'https://staked.mewapi.io',\n      batchContract: '0xF243A92eB7D4B4F6A00A57888B887bd01ec6fd12',\n      url: 'https://beaconscan.com/main/validator/',\n      etherscanTxUrl: 'https://etherscan.io/tx/',\n      ethvmTxUrl: 'https://www.ethvm.com/tx/',\n      etherscanAddrUrl: 'https://etherscan.io/address/',\n      ethvmAddrUrl: 'https://www.ethvm.com/address/'\n    }\n  }\n};\n","const calculateEth2Rewards = ({\n  slotTimeInSec = 12,\n  slotsInEpoch = 32,\n  baseRewardFactor = 64,\n  totalAtStake = 1_000_000,\n  baseRewardsPerEpoch = 4,\n  baseRewardsPropotionalValidators = 3,\n  averageNetworkPctOnline = 0.95,\n  oneSlotLatePenalty = 0.0156,\n  vaildatorUptime = 0.99,\n  validatorDeposit = 32\n}) => {\n  // Calculate number of epochs per year\n  const avgSecInYear = 31556908.8; // 60 * 60 * 24 * 365.242\n  const epochPerYear = avgSecInYear / (slotTimeInSec * slotsInEpoch);\n\n  // Calculate base reward for full validator (in gwei)\n  const baseGweiRewardFullValidator =\n    (32 * 10e8 * baseRewardFactor) /\n    (totalAtStake * 10e8) ** 0.5 /\n    baseRewardsPerEpoch;\n\n  // Calculate offline per-validator penalty per epoch (in gwei)\n  const offlineEpochGweiPentalty = baseGweiRewardFullValidator * 4;\n\n  // Calculate online per-validator reward per epoch (in gwei)\n  const fullUptimeValidatorRewards =\n    baseGweiRewardFullValidator *\n    baseRewardsPropotionalValidators *\n    averageNetworkPctOnline;\n  const oneEighthReward =\n    0.125 * baseGweiRewardFullValidator * averageNetworkPctOnline;\n  const rewardAdjModifier =\n    averageNetworkPctOnline +\n    averageNetworkPctOnline *\n      (1 - averageNetworkPctOnline) *\n      (1 - oneSlotLatePenalty) +\n    averageNetworkPctOnline *\n      (1 - averageNetworkPctOnline) ** 2 *\n      (1 - 2 * oneSlotLatePenalty);\n  const sevenEighthsReward =\n    0.875 * baseGweiRewardFullValidator * rewardAdjModifier;\n  const onlineEpochGweiReward =\n    fullUptimeValidatorRewards + oneEighthReward + sevenEighthsReward;\n\n  // Calculate net yearly staking reward (in gwei)\n  const reward = onlineEpochGweiReward * vaildatorUptime;\n  const penalty = offlineEpochGweiPentalty * (1 - vaildatorUptime);\n  const netRewardPerYear = epochPerYear * (reward - penalty);\n\n  // Return net yearly staking reward percentage\n  return netRewardPerYear / 10e8 / validatorDeposit;\n};\n\nexport default calculateEth2Rewards;\n","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TheStakedLayout.vue?vue&type=style&index=0&id=d8d06fae&prod&lang=scss&scoped=true&\""],"sourceRoot":""}