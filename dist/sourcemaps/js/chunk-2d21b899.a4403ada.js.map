{"version":3,"sources":["webpack:///./src/modules/access-wallet/software/components/AccessWalletMnemonic.vue?debe","webpack:///src/modules/access-wallet/software/components/AccessWalletMnemonic.vue","webpack:///./src/modules/access-wallet/software/components/AccessWalletMnemonic.vue?f7a4","webpack:///./src/modules/access-wallet/software/components/AccessWalletMnemonic.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","stepperItems","step","scopedSlots","_u","key","fn","on","$event","preventDefault","unlockBtn","apply","arguments","staticClass","_v","staticStyle","mnemonicOptions","model","value","callback","$$v","length","expression","_l","n","ref","refInFor","phrase","$set","extraWordPanel","extraWord","proxy","isValidMnemonic","nativeOn","clearFields","walletInstance","selectedPath","parsedPaths","switchAddress","setPath","accessWallet","staticRenderFns","name","components","phraseBlock","AccessWalletAddressNetwork","props","handlerAccessWallet","type","default","data","label","subtext","computed","mapState","toggleTitle","parsedPhrase","map","newObj","concat","watch","deep","handler","splitVal","methods","mapActions","unlockMnemonicWallet","then","catch","Toast","nextStepTwo","updateMnemonicPath","reset","component"],"mappings":"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","file":"js/chunk-2d21b899.a4403ada.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-stepper',{attrs:{\"items\":_vm.stepperItems,\"on-step\":_vm.step},scopedSlots:_vm._u([(_vm.step === 1)?{key:\"stepperContent1\",fn:function(){return [_c('form',{on:{\"submit\":function($event){$event.preventDefault();return _vm.unlockBtn.apply(null, arguments)}}},[_c('v-row',{staticClass:\"align-end justify-start mb-3 mb-md-5\"},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"subtitle-1 font-weight-bold grey--text\"},[_vm._v(\"STEP 1.\")]),_c('div',{staticClass:\"headline font-weight-bold\"},[_vm._v(\" Enter your Mnemonic Phrase \")]),_c('p',{staticClass:\"mb-3\"},[_vm._v(\" Please type the mnemonic phrase you wrote down in the right order. \")]),_c('div',{staticClass:\"d-flex flex-row-reverse pb-4\"},[_c('v-select',{staticStyle:{\"max-width\":\"150px\"},attrs:{\"hide-details\":\"\",\"dense\":\"\",\"item-text\":\"label\",\"item-value\":\"value\",\"items\":_vm.mnemonicOptions,\"label\":\"\",\"outlined\":\"\"},model:{value:(_vm.length),callback:function ($$v) {_vm.length=$$v},expression:\"length\"}})],1),_c('phrase-block',{staticClass:\"mb-8\"},[_c('v-row',_vm._l((_vm.length),function(n){return _c('v-col',{key:(\"mnemonicInput\" + n),attrs:{\"cols\":\"6\",\"lg\":\"3\",\"md\":\"3\",\"sm\":\"4\"}},[_c('v-text-field',{ref:(\"mnemonicInput\" + n),refInFor:true,attrs:{\"name\":(\"mnemonicInput\" + n),\"label\":(n + \".\"),\"autocomplete\":\"off\",\"autofocus\":n === 1},model:{value:(_vm.phrase[n]),callback:function ($$v) {_vm.$set(_vm.phrase, n, $$v)},expression:\"phrase[n]\"}})],1)}),1)],1),_c('mew-expand-panel',{attrs:{\"has-dividers\":true,\"panel-items\":_vm.extraWordPanel,\"idx-to-expand\":null},scopedSlots:_vm._u([{key:\"panelBody1\",fn:function(){return [_c('div',{staticClass:\"px-5\"},[_c('mew-input',{attrs:{\"type\":\"password\",\"label\":\"Enter Extra word\",\"placeholder\":\"Enter your extra word\"},model:{value:(_vm.extraWord),callback:function ($$v) {_vm.extraWord=$$v},expression:\"extraWord\"}})],1)]},proxy:true}],null,false,3643731195)}),_c('v-row',{staticClass:\"pt-4\",attrs:{\"dense\":\"\",\"align\":\"center\",\"justify\":\"center\"}},[_c('v-col',{staticClass:\"text-center\",attrs:{\"cols\":\"12\",\"align-self\":\"center\"}},[_c('mew-button',{attrs:{\"title\":\"Next\",\"btn-size\":\"xlarge\",\"disabled\":!_vm.isValidMnemonic},nativeOn:{\"click\":function($event){return _vm.unlockBtn.apply(null, arguments)}}})],1),_c('v-col',{staticClass:\"text-center\",attrs:{\"cols\":\"12\",\"align-self\":\"center\"}},[_c('mew-button',{attrs:{\"title\":\"Clear\",\"btn-size\":\"xlarge\",\"btn-style\":\"transparent\"},nativeOn:{\"click\":function($event){return _vm.clearFields.apply(null, arguments)}}})],1)],1)],1)],1)],1)]},proxy:true}:null,(_vm.step === 2)?{key:\"stepperContent2\",fn:function(){return [_c('v-row',{staticClass:\"align-end justify-start\"},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('div',{staticClass:\"subtitle-1 font-weight-bold grey--text\"},[_vm._v(\"STEP 2.\")]),_c('div',{staticClass:\"headline font-weight-bold mb-5\"},[_vm._v(\" Select Address and Network \")])])],1),_c('access-wallet-address-network',{attrs:{\"handler-wallet\":_vm.walletInstance,\"selected-path\":_vm.selectedPath,\"paths\":_vm.parsedPaths,\"hide-networks\":_vm.switchAddress},on:{\"setPath\":_vm.setPath,\"unlock\":_vm.accessWallet}})]},proxy:true}:null],null,true)})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <mew-stepper :items=\"stepperItems\" :on-step=\"step\">\n    <!--\n    =====================================================================================\n      Step 1: Enter mnemonic\n    =====================================================================================\n    -->\n    <template v-if=\"step === 1\" #stepperContent1>\n      <form @submit.prevent=\"unlockBtn\">\n        <v-row class=\"align-end justify-start mb-3 mb-md-5\">\n          <v-col cols=\"12\">\n            <!--\n          =====================================================================================\n            Title\n          =====================================================================================\n          -->\n            <div class=\"subtitle-1 font-weight-bold grey--text\">STEP 1.</div>\n            <div class=\"headline font-weight-bold\">\n              Enter your Mnemonic Phrase\n            </div>\n            <p class=\"mb-3\">\n              Please type the mnemonic phrase you wrote down in the right order.\n            </p>\n            <!--\n          =====================================================================================\n            Select number of words\n          =====================================================================================\n          -->\n            <div class=\"d-flex flex-row-reverse pb-4\">\n              <v-select\n                v-model=\"length\"\n                style=\"max-width: 150px\"\n                hide-details\n                dense\n                item-text=\"label\"\n                item-value=\"value\"\n                :items=\"mnemonicOptions\"\n                label=\"\"\n                outlined\n              ></v-select>\n            </div>\n            <!--\n          =====================================================================================\n            Enter Phrase Block\n          =====================================================================================\n          -->\n            <phrase-block class=\"mb-8\">\n              <v-row>\n                <v-col\n                  v-for=\"n in length\"\n                  :key=\"`mnemonicInput${n}`\"\n                  cols=\"6\"\n                  lg=\"3\"\n                  md=\"3\"\n                  sm=\"4\"\n                >\n                  <v-text-field\n                    :ref=\"`mnemonicInput${n}`\"\n                    v-model=\"phrase[n]\"\n                    :name=\"`mnemonicInput${n}`\"\n                    :label=\"`${n}.`\"\n                    autocomplete=\"off\"\n                    :autofocus=\"n === 1\"\n                  ></v-text-field>\n                </v-col>\n              </v-row>\n            </phrase-block>\n            <!--\n          =====================================================================================\n            Extra Word\n          =====================================================================================\n          -->\n            <mew-expand-panel\n              :has-dividers=\"true\"\n              :panel-items=\"extraWordPanel\"\n              :idx-to-expand=\"null\"\n            >\n              <template #panelBody1>\n                <div class=\"px-5\">\n                  <mew-input\n                    v-model=\"extraWord\"\n                    type=\"password\"\n                    label=\"Enter Extra word\"\n                    placeholder=\"Enter your extra word\"\n                  />\n                </div>\n              </template>\n            </mew-expand-panel>\n            <!--\n          =====================================================================================\n            Next Button\n          =====================================================================================\n          -->\n            <v-row dense class=\"pt-4\" align=\"center\" justify=\"center\">\n              <v-col cols=\"12\" align-self=\"center\" class=\"text-center\">\n                <mew-button\n                  title=\"Next\"\n                  btn-size=\"xlarge\"\n                  :disabled=\"!isValidMnemonic\"\n                  @click.native=\"unlockBtn\"\n                />\n              </v-col>\n              <v-col cols=\"12\" align-self=\"center\" class=\"text-center\">\n                <mew-button\n                  title=\"Clear\"\n                  btn-size=\"xlarge\"\n                  btn-style=\"transparent\"\n                  @click.native=\"clearFields\"\n                />\n              </v-col>\n            </v-row>\n          </v-col>\n        </v-row>\n      </form>\n    </template>\n    <!--\n    =====================================================================================\n      Step 2: Select Address and Network\n    =====================================================================================\n    -->\n    <template v-if=\"step === 2\" #stepperContent2>\n      <v-row class=\"align-end justify-start\">\n        <v-col cols=\"12\">\n          <!--\n            =====================================================================================\n              Title\n            =====================================================================================\n            -->\n          <div class=\"subtitle-1 font-weight-bold grey--text\">STEP 2.</div>\n          <div class=\"headline font-weight-bold mb-5\">\n            Select Address and Network\n          </div>\n        </v-col>\n      </v-row>\n      <access-wallet-address-network\n        :handler-wallet=\"walletInstance\"\n        :selected-path=\"selectedPath\"\n        :paths=\"parsedPaths\"\n        :hide-networks=\"switchAddress\"\n        @setPath=\"setPath\"\n        @unlock=\"accessWallet\"\n      />\n    </template>\n  </mew-stepper>\n</template>\n\n<script>\nimport { mapActions, mapState } from 'vuex';\nimport { isEmpty } from 'lodash';\n\nimport { Toast, ERROR, SENTRY } from '@/modules/toast/handler/handlerToast';\n\nimport WALLET_TYPES from '@/modules/access-wallet/common/walletTypes';\nimport paths from '@/modules/access-wallet/hardware/handlers/bip44';\nexport default {\n  name: 'AccessMnemonic',\n  components: {\n    phraseBlock: () => import('@/components/PhraseBlock'),\n    AccessWalletAddressNetwork: () =>\n      import(\n        '@/modules/access-wallet/common/components/AccessWalletAddressNetwork'\n      )\n  },\n  props: {\n    handlerAccessWallet: {\n      type: Object,\n      default: () => {\n        return {};\n      }\n    },\n    switchAddress: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      /* Stepper Items */\n      step: 1,\n      stepperItems: [\n        {\n          step: 1,\n          name: 'Enter Phrase'\n        },\n        {\n          step: 3,\n          name: 'Address & Network'\n        }\n      ],\n      /*Phrase Items: */\n      extraWord: '',\n      phrase: {},\n      length: 12,\n      mnemonicOptions: [\n        {\n          label: '12 words',\n          value: 12\n        },\n        {\n          label: '24 words',\n          value: 24\n        }\n      ],\n      /* Derivation Path */\n      selectedPath: {\n        name: 'Ethereum',\n        subtext: \"m/44'/60'/0'/0\",\n        value: \"m/44'/60'/0'/0\"\n      },\n      walletInstance: {}\n    };\n  },\n  computed: {\n    ...mapState('custom', ['paths']),\n    /*------------------------------------\n     * STEP 1 ITEMS\n    -------------------------------------*/\n    /**\n     * Property returns panel items for the extra word,used in step 1\n     */\n    extraWordPanel() {\n      return [\n        {\n          name: 'Do you have an extra word?',\n          toggleTitle: 'Add your word'\n        }\n      ];\n    },\n    /**\n     * Property validates whether or not all words has been entered\n     * @return booelan\n     */\n    isValidMnemonic() {\n      return Object.keys(this.phrase).length === this.length;\n    },\n\n    /*------------------------------------\n     * STEP 2 ITEMS\n    -------------------------------------*/\n    /**\n     * Property returns parsed mnemonic phrase\n     * Is used in unlock wallet method\n     */\n    parsedPhrase() {\n      return Object.values(this.phrase).join(' ').toLowerCase();\n    },\n    /**\n     * Property returns default Paths + Custom paths, used in Select Path component\n     * Property Interface:\n     * {  name = string -> Name of the Path,\n     *    subtext = string --> Derivation Path,\n     *    value = tring --> Derivation Path\n     * }\n     */\n    parsedPaths() {\n      return paths[WALLET_TYPES.MNEMONIC]\n        .map(item => {\n          const newObj = {};\n          newObj['name'] = item['label'];\n          newObj['subtext'] = item['path'];\n          newObj['value'] = item['path'];\n          return newObj;\n        })\n        .concat(this.paths);\n    }\n  },\n  watch: {\n    phrase: {\n      deep: true,\n      handler: function (newval) {\n        if (newval && !isEmpty(newval) && !isEmpty(newval[1])) {\n          const splitVal = newval[1].split(' ');\n          if (splitVal.length === 12 || splitVal.length === 24) {\n            this.length = splitVal.length;\n            const newObj = {};\n            splitVal.forEach((item, idx) => {\n              newObj[idx + 1] = item.toLowerCase();\n            });\n            this.phrase = newObj;\n          }\n        }\n      }\n    },\n    selectedPath: {\n      handler: function () {\n        this.walletInstance = {};\n        this.nextStepTwo();\n      },\n      deep: true\n    }\n  },\n  methods: {\n    ...mapActions('global', ['addCustomPath']),\n    /**\n     * Method unlocks mnemonic phrase;\n     * Direct to second step if mnemonic was valid;\n     * Shows toast on error\n     * Used in STEP 1\n     */\n    unlockBtn() {\n      this.handlerAccessWallet\n        .unlockMnemonicWallet(this.parsedPhrase, this.extraWord)\n        .then(res => {\n          if (res) {\n            this.step = 2;\n            this.nextStepTwo();\n          }\n        })\n        .catch(e => {\n          Toast(e, {}, ERROR);\n        });\n    },\n    setPath(e) {\n      this.selectedPath = e;\n    },\n    nextStepTwo() {\n      const defaultPath = this.selectedPath;\n      this.handlerAccessWallet\n        .updateMnemonicPath(defaultPath.value)\n        .catch(e => {\n          Toast(e, {}, ERROR);\n        });\n      this.walletInstance = this.handlerAccessWallet.getWalletInstance();\n    },\n    /**\n     * Clears mnemonic input field\n     */\n    clearFields() {\n      this.phrase = {};\n      this.length = 12;\n    },\n    /**\n     * reset component\n     */\n    reset() {\n      this.step = 1;\n      /*Phrase Items: */\n      this.extraWord = '';\n      this.phrase = {};\n      this.length = 12;\n      /* Derivation Path */\n      this.selectedPath = {\n        name: 'Ethereum',\n        subtext: \"m/44'/60'/0'/0\",\n        value: \"m/44'/60'/0'/0\"\n      };\n      this.walletInstance = {};\n    },\n    /**\n     * Methods emits parent to unlock wallet\n     * and passes account withinMnemonic Phrase\n     * Used in STEP 2\n     */\n    accessWallet(account) {\n      if (account) {\n        this.$emit('unlock', account);\n        this.reset();\n      } else {\n        Toast('Something went wrong in mnemonic wallet access', {}, SENTRY);\n      }\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccessWalletMnemonic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AccessWalletMnemonic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AccessWalletMnemonic.vue?vue&type=template&id=9c91cd00&\"\nimport script from \"./AccessWalletMnemonic.vue?vue&type=script&lang=js&\"\nexport * from \"./AccessWalletMnemonic.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}