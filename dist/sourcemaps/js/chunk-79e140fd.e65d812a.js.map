{"version":3,"sources":["webpack:///./src/modules/nft-manager/ModuleNftManager.vue?ea42","webpack:///./src/core/helpers/getService.js","webpack:///./src/modules/nft-manager/handlers/config/configNft.js","webpack:///./src/modules/nft-manager/handlers/abi/abiNft.js","webpack:///./src/modules/nft-manager/handlers/handlerNftManager.js","webpack:///src/modules/nft-manager/ModuleNftManager.vue","webpack:///./src/modules/nft-manager/ModuleNftManager.vue?23de","webpack:///./src/modules/nft-manager/ModuleNftManager.vue","webpack:///./src/modules/nft-manager/ModuleNftManager.vue?25b7"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","scopedSlots","_u","key","fn","loadingContracts","hasNoTokens","_e","contracts","length","tabs","_v","_s","$t","onNftSend","$vuetify","breakpoint","mdAndUp","smAndDown","activeTab","on","onTab","_l","contract","idx","slot","selectedContract","name","count","displayedTokens","token","tokenIdx","loadingTokens","openNftSend","getImageUrl","totalPages","setPage","model","value","callback","$$v","currentPage","expression","closeNftSend","selectedNft","sendTx","isValid","enoughFunds","showBalanceError","setAddress","hasMinEth","proxy","staticRenderFns","capitalize","toString","charAt","toUpperCase","substr","getService","parsableUrl","parsedUrl","url","parse","hostname","splitUrl","split","join","configs","countPerPage","cryptoKittiesContract","mainnet","api","ABI","constant","inputs","type","outputs","payable","stateMutability","NFT","network","address","web3","fetch","then","res","json","Error","hash","utils","isAddress","to","raw","eth","Contract","includes","cryptoKittiesTransfer","safeTransferFrom","from","sendTransaction","gasEst","estimateGas","data","methods","token_id","encodeABI","options","transfer","Math","ceil","BigNumber","div","toNumber","endIdx","page","tokenId","nftUrl","slice","components","NftManagerDetails","NftManagerSend","nft","toAddress","gasFees","localGasPrice","nftApiResponse","computed","mapState","mapGetters","tokens","item","image","hasPages","startIndex","endIndex","get","set","watch","balanceInWei","Toast","WARNING","gasTypeFee","gasFeesToBN","mounted","setUpNFT","getNfts","setTimeout","toBN","send","title","response","SUCCESS","catch","updateValues","component"],"mappings":"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ACAC,0BAAA,yDAEAlB,gBACA,OACAmB,OACAtG,YACAL,aACAR,eACAsC,eACA8E,aACAhG,oBACAiG,YACA5E,eACAC,oBACA4E,kBACAvH,oBACA2B,iBACA6F,oBAGAC,uFACAC,uDACAA,qDACAC,0DACAA,yBACA,eACA,UACA,WACA,oBACA,IAIAtH,gBACA,uCACA,OAAAiB,qDAGAsG,kBAAA,WACA,iCACA,4CACA,OACAC,mCACA,+BAGA,KACA,iCACA,MACAA,gBACAA,yBACA,gCAEA,GAEA,aACA,OACAC,gDACAxG,YACA6E,oBACAjF,gCAKA,UAEAf,qBACA,oCACA,qCACA,OACAe,4BACAK,sBACAD,yBAIA,IAKAQ,sBACA,yDAEAiG,oBACA,uDAEAC,sBACA,8BAEAC,oBACA,uDAEA7F,aACA8F,eACA,6BAEAC,gBACA,WAMA3G,2BACA,yDAKAiB,mBACA,oEAGA2F,OACAC,wBACA,kBAEAxD,gBACA,yBACA,sBACA,kBACA,mBAAAvD,+BACA,uCACA,iBAEAgH,+DACA,wBACA,GACAC,QAEA,yBAGA3D,mBACA,yBACA,sBACA,kBACA,mBAAAtD,+BACA,iBAEAnB,sBACA,YACA,eAGAkH,sBAAA,kKACAhC,2BAAA,eACA,OAAAmD,mCAAA,SACA,yCAAAlB,SACAmB,2CACA,uBACA,0CAEA,iBACA,wBAEA,iBACA,uBACA,0CAbA,KAiBAC,mBACA,iBAEAxC,SACAyC,oBAIA,gBACAhE,qBACAC,qBACAC,iBAGA,eACA,0DACA,kBAEA+D,mBAAA,WACA,qCACA,mBACA,sBACAC,uBACA,qBACA,SAGAhG,qBACA,yBAEAiG,uEAEA,oBACA,2BAEA,oBACA,2BAGAjH,wBACA,oDAEAb,kBACA,iBACA,wCACA,qDACA,0BAKAY,wBACA,IACA,oBAEA,kBACA,mBAAAN,qCAEAgB,wBACA,kBACA,kBACA,mBAAAhB,gCAEAkB,kBAAA,oJACA,aACA,IACA,MACAuG,gCACAhE,kBACA,iBACA,iBACA,eACA,iBACAuD,eACA,mDACA,CACAU,mDACAxF,2CACA,aACAyF,cAGAC,OACA,QAGAC,mBACAb,uCAEA,SACAA,oCAEA,0CA7BA,IA+BAc,wBAAA,WACA,yBACA,0DAEA,wBACA,oDACA,qBAEA,gBAEAxG,uBACA,gCACA,yBAEA,kBAMAb,oBACA,8BC3byW,I,wBCQrWsH,EAAY,eACd,EACAlK,EACA4D,GACA,EACA,KACA,KACA,MAIa,aAAAsG,E,2CCnBf","file":"js/chunk-79e140fd.e65d812a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('mew-module',{staticClass:\"text-center d-flex justify-end flex-grow-1 pt-6 mr-3\",attrs:{\"has-elevation\":true,\"has-indicator\":true,\"title\":\"NFT Manager\"},scopedSlots:_vm._u([{key:\"moduleBody\",fn:function(){return [(_vm.loadingContracts && !_vm.hasNoTokens)?_c('v-skeleton-loader',{attrs:{\"type\":\"table-heading,list-item-avatar-three-line, list-item-avatar-three-line, list-item-avatar-three-line\"}}):_vm._e(),(\n          (!_vm.loadingContracts &&\n            _vm.contracts.length === 0 &&\n            _vm.tabs.length === 0) ||\n          _vm.hasNoTokens\n        )?_c('v-card',{staticClass:\"d-flex align-center px-5 py-4\",attrs:{\"flat\":\"\",\"color\":\"selectorBg lighten-1\",\"min-height\":\"94px\"}},[_c('v-card-text',{staticClass:\"text-center\"},[_vm._v(_vm._s(_vm.$t('nftManager.none-owned'))+\" \")])],1):_vm._e(),(\n          !_vm.loadingContracts && !_vm.onNftSend && _vm.tabs.length > 0 && !_vm.hasNoTokens\n        )?_c('mew-tabs',{attrs:{\"items\":_vm.tabs,\"is-vertical\":_vm.$vuetify.breakpoint.mdAndUp,\"has-underline\":_vm.$vuetify.breakpoint.smAndDown,\"active-tab\":_vm.activeTab},on:{\"onTab\":_vm.onTab}},[_vm._l((_vm.contracts),function(contract,idx){return _c('template',{slot:'tabItemContent' + (idx + 1)},[_c('div',{key:idx,staticClass:\"ml-5\"},[_c('div',{staticClass:\"d-flex justify-space-between mt-3 mb-5\"},[_c('h5',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.selectedContract.name)+\" \")]),_c('div',[_vm._v(\"Total: \"+_vm._s(_vm.selectedContract.count))])]),(_vm.displayedTokens && _vm.displayedTokens.length === 0)?_c('div',[_vm._v(\" Loading ... \")]):_vm._e(),(_vm.displayedTokens && _vm.displayedTokens.length !== 0)?_c('div',[_vm._l((_vm.displayedTokens),function(token,tokenIdx){return _c('div',{key:tokenIdx,staticClass:\"mb-3\"},[_c('nft-manager-details',{attrs:{\"loading\":_vm.loadingTokens,\"on-click\":_vm.openNftSend,\"get-image-url\":_vm.getImageUrl,\"token\":token}})],1)}),(_vm.hasPages)?_c('div',{staticClass:\"px-4 mt-3 d-flex align-center justify-end\"},[_c('v-pagination',{staticClass:\"nft-pagination\",attrs:{\"color\":\"expandHeader\",\"length\":_vm.totalPages,\"prev-icon\":\"mdi-menu-left\",\"next-icon\":\"mdi-menu-right\"},on:{\"input\":_vm.setPage},model:{value:(_vm.currentPage),callback:function ($$v) {_vm.currentPage=$$v},expression:\"currentPage\"}})],1):_vm._e()],2):_vm._e()])])})],2):_vm._e(),(_vm.onNftSend)?_c('nft-manager-send',{attrs:{\"close\":_vm.closeNftSend,\"get-image-url\":_vm.getImageUrl,\"nft\":_vm.selectedNft,\"nft-category\":_vm.selectedContract.name,\"send\":_vm.sendTx,\"disabled\":!_vm.isValid,\"enough-funds\":_vm.enoughFunds,\"show-balance-error\":_vm.showBalanceError,\"set-address\":_vm.setAddress},on:{\"hasMinEth\":_vm.hasMinEth}}):_vm._e()]},proxy:true}])})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import url from 'url';\nconst capitalize = value => {\n  if (!value) return '';\n  value = value.toString();\n  return value.charAt(0).toUpperCase() + value.substr(1, value.length);\n};\n\nconst getService = parsableUrl => {\n  const parsedUrl = url.parse(parsableUrl).hostname;\n  const splitUrl = parsedUrl.split('.');\n  if (splitUrl.length > 2)\n    // eslint-disable-next-line\n    return capitalize(`${splitUrl[1]}.${splitUrl[2]}`);\n  return capitalize(splitUrl.join('.'));\n};\n\nexport default getService;\n","const configs = {\n  url: 'https://nft.mewapi.io', // 'https://9bcq984094.execute-api.us-west-2.amazonaws.com/dev',\n  countPerPage: 9,\n  cryptoKittiesContract: '0x06012c8cf97bead5deae237070f9587f8e7a266d',\n  mainnet: 'ETH',\n  api: 'https://mainnet.mewwallet.dev'\n};\n\nexport default configs;\n","const ABI = [\n  {\n    constant: false,\n    inputs: [\n      {\n        name: 'from',\n        type: 'address'\n      },\n      {\n        name: 'to',\n        type: 'address'\n      },\n      {\n        name: 'tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'safeTransferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_from', type: 'address' },\n      { name: '_to', type: 'address' },\n      {\n        name: '_tokenId',\n        type: 'uint256'\n      }\n    ],\n    name: 'transferFrom',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  },\n  {\n    constant: false,\n    inputs: [\n      { name: '_to', type: 'address' },\n      { name: '_tokenId', type: 'uint256' }\n    ],\n    name: 'transfer',\n    outputs: [],\n    payable: false,\n    stateMutability: 'nonpayable',\n    type: 'function'\n  }\n];\n\nexport default ABI;\n","import utils from 'web3-utils';\nimport configs from './config/configNft';\nimport ABI from './abi/abiNft';\nimport BigNumber from 'bignumber.js';\n\nexport default class NFT {\n  constructor({ network, address, web3 }) {\n    this.network = network;\n    this.address = address;\n    this.web3 = web3;\n    this.countPerPage = configs.countPerPage;\n    this.currentPage = 1;\n  }\n  /**\n   * retrieves all NFTs for account\n   * returns {Object}\n   */\n  async getNfts() {\n    try {\n      return await fetch(\n        `${configs.api}/v3/nfts/account?address=${this.address}`\n      ).then(res => res.json());\n    } catch (e) {\n      throw new Error(e);\n    }\n  }\n\n  isValidAddress(hash) {\n    return hash !== '' && utils.isAddress(hash);\n  }\n\n  /**\n   * Send NFT\n   */\n  send(to, token) {\n    let raw;\n    this.contract = new this.web3.eth.Contract(ABI);\n    if (token.contract.includes(configs.cryptoKittiesContract)) {\n      raw = this.cryptoKittiesTransfer(to, token);\n    } else {\n      raw = this.safeTransferFrom(to, token);\n    }\n    raw.from = this.address;\n    return this.web3.eth.sendTransaction(raw);\n  }\n  /**\n   * Get Gas Fees\n   */\n\n  async getGasFees(to, token) {\n    let raw;\n    this.contract = new this.web3.eth.Contract(ABI);\n    if (token.contract.includes(configs.cryptoKittiesContract)) {\n      raw = this.cryptoKittiesTransfer(to, token);\n    } else {\n      raw = this.safeTransferFrom(to, token);\n    }\n    raw.from = this.address;\n    const gasEst = this.web3.eth.estimateGas(raw);\n    return gasEst;\n  }\n\n  safeTransferFrom(to, token) {\n    return {\n      to: token.contract,\n      data: this.contract.methods\n        .safeTransferFrom(this.address, to, token.token_id)\n        .encodeABI()\n    };\n  }\n\n  cryptoKittiesTransfer(to, token) {\n    this.contract.options.address = token.contract;\n    return {\n      to: token.contract,\n      data: this.contract.methods.transfer(to, token.token_id).encodeABI()\n    };\n  }\n\n  /**\n   * Pagination\n   */\n\n  totalPages(count) {\n    return Math.ceil(new BigNumber(count).div(this.countPerPage).toNumber());\n  }\n\n  hasPages(count) {\n    return this.countPerPage < count;\n  }\n\n  startIndex() {\n    return this.currentPage * this.countPerPage - this.countPerPage;\n  }\n\n  endIndex(count) {\n    const endIdx = this.currentPage * this.countPerPage;\n    if (count > endIdx) {\n      return endIdx;\n    }\n    return count;\n  }\n\n  setCurrentPage(page) {\n    this.currentPage = page;\n  }\n\n  goToFirstPage() {\n    this.currentPage = 1;\n  }\n\n  /**\n   * Get Nft Image\n   */\n\n  getImageUrl(contract, tokenId) {\n    const nftUrl = `${configs.url}/getImage`;\n    if (tokenId && tokenId.slice(0, 2) === '0x') {\n      tokenId = tokenId.slice(2);\n    }\n    return `${nftUrl}?contract=${contract}&tokenId=${tokenId}`;\n  }\n}\n","<template>\n  <!--\n    =====================================================================================\n      Module Nft Manager\n    =====================================================================================\n    -->\n  <div>\n    <mew-module\n      class=\"text-center d-flex justify-end flex-grow-1 pt-6 mr-3\"\n      :has-elevation=\"true\"\n      :has-indicator=\"true\"\n      title=\"NFT Manager\"\n    >\n      <template #moduleBody>\n        <!--\n    =====================================================================================\n      Loading\n    =====================================================================================\n    -->\n        <v-skeleton-loader\n          v-if=\"loadingContracts && !hasNoTokens\"\n          type=\"table-heading,list-item-avatar-three-line, list-item-avatar-three-line, list-item-avatar-three-line\"\n        />\n        <!--\n    =====================================================================================\n    Display if no nfts owned\n    =====================================================================================\n    -->\n        <v-card\n          v-if=\"\n            (!loadingContracts &&\n              contracts.length === 0 &&\n              tabs.length === 0) ||\n            hasNoTokens\n          \"\n          flat\n          color=\"selectorBg lighten-1\"\n          class=\"d-flex align-center px-5 py-4\"\n          min-height=\"94px\"\n        >\n          <v-card-text class=\"text-center\"\n            >{{ $t('nftManager.none-owned') }}\n          </v-card-text>\n        </v-card>\n        <!--\n    =====================================================================================\n      Display owned nft tokens\n    =====================================================================================\n    -->\n        <mew-tabs\n          v-if=\"\n            !loadingContracts && !onNftSend && tabs.length > 0 && !hasNoTokens\n          \"\n          :items=\"tabs\"\n          :is-vertical=\"$vuetify.breakpoint.mdAndUp\"\n          :has-underline=\"$vuetify.breakpoint.smAndDown\"\n          :active-tab=\"activeTab\"\n          @onTab=\"onTab\"\n        >\n          <template\n            v-for=\"(contract, idx) in contracts\"\n            :slot=\"'tabItemContent' + (idx + 1)\"\n          >\n            <div :key=\"idx\" class=\"ml-5\">\n              <!--\n    =====================================================================================\n      Display all owned tokens by nft\n    =====================================================================================\n    -->\n              <div class=\"d-flex justify-space-between mt-3 mb-5\">\n                <h5 class=\"font-weight-bold\">\n                  {{ selectedContract.name }}\n                </h5>\n                <div>Total: {{ selectedContract.count }}</div>\n              </div>\n              <div v-if=\"displayedTokens && displayedTokens.length === 0\">\n                Loading ...\n              </div>\n              <div v-if=\"displayedTokens && displayedTokens.length !== 0\">\n                <div\n                  v-for=\"(token, tokenIdx) in displayedTokens\"\n                  :key=\"tokenIdx\"\n                  class=\"mb-3\"\n                >\n                  <!--\n    =====================================================================================\n      Nft Token Card Details\n    =====================================================================================\n    -->\n                  <nft-manager-details\n                    :loading=\"loadingTokens\"\n                    :on-click=\"openNftSend\"\n                    :get-image-url=\"getImageUrl\"\n                    :token=\"token\"\n                  />\n                </div>\n                <!--\n    =====================================================================================\n      Displays pagination if there are more than > 9 tokens\n    =====================================================================================\n    -->\n                <div\n                  v-if=\"hasPages\"\n                  class=\"px-4 mt-3 d-flex align-center justify-end\"\n                >\n                  <v-pagination\n                    v-model=\"currentPage\"\n                    class=\"nft-pagination\"\n                    color=\"expandHeader\"\n                    :length=\"totalPages\"\n                    prev-icon=\"mdi-menu-left\"\n                    next-icon=\"mdi-menu-right\"\n                    @input=\"setPage\"\n                  />\n                </div>\n              </div>\n            </div>\n          </template>\n        </mew-tabs>\n        <!--\n    =====================================================================================\n      Display send token page\n    =====================================================================================\n    -->\n        <nft-manager-send\n          v-if=\"onNftSend\"\n          :close=\"closeNftSend\"\n          :get-image-url=\"getImageUrl\"\n          :nft=\"selectedNft\"\n          :nft-category=\"selectedContract.name\"\n          :send=\"sendTx\"\n          :disabled=\"!isValid\"\n          :enough-funds=\"enoughFunds\"\n          :show-balance-error=\"showBalanceError\"\n          :set-address=\"setAddress\"\n          @hasMinEth=\"hasMinEth\"\n        />\n      </template>\n    </mew-module>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex';\nimport { toBN, isAddress } from 'web3-utils';\nimport {\n  Toast,\n  SUCCESS,\n  WARNING,\n  ERROR\n} from '@/modules/toast/handler/handlerToast';\nimport getService from '@/core/helpers/getService';\n\nimport { ROUTES_WALLET } from '@/core/configs/configRoutes';\nimport { ETH } from '@/utils/networks/types';\nimport { toBNSafe } from '@/core/helpers/numberFormatHelper';\n\nimport NFT from './handlers/handlerNftManager';\n\nconst MIN_GAS_LIMIT = 21000;\n\nexport default {\n  components: {\n    NftManagerDetails: () => import('./components/NftManagerDetails'),\n    NftManagerSend: () => import('./components/NftManagerSend')\n  },\n  data() {\n    return {\n      nft: {},\n      activeTab: 0,\n      onNftSend: false,\n      hasNoTokens: false,\n      selectedNft: {},\n      toAddress: '',\n      selectedContract: {},\n      gasFees: '0',\n      enoughFunds: false,\n      showBalanceError: false,\n      localGasPrice: '0',\n      loadingContracts: true,\n      loadingTokens: true,\n      nftApiResponse: []\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['balance', 'web3', 'address']),\n    ...mapState('global', ['network', 'gasPriceType']),\n    ...mapGetters('wallet', ['balanceInETH', 'balanceInWei']),\n    ...mapGetters('global', [\n      'isEthNetwork',\n      'network',\n      'gasPrice',\n      'gasPriceByType'\n    ]),\n    /**\n     * Get Tabs\n     */\n    tabs() {\n      return this.contracts.map(item => {\n        return { name: `${item.name} (${item.count})` };\n      });\n    },\n    tokens() {\n      if (this.nftApiResponse.length > 0) {\n        const contract = this.nftApiResponse.find(item => {\n          return (\n            item.contract_address.toLowerCase() ===\n            this.selectedContract.contract\n          );\n        });\n        if (contract) {\n          return contract.assets.map(item => {\n            const getImage =\n              item.urls.length > 0\n                ? item.urls.find(obj => {\n                    if (obj.type === 'IMAGE') return obj;\n                  })\n                : '';\n\n            const url = getImage ? getImage.url : '';\n            return {\n              image: `https://img.mewapi.io/?image=${url}`,\n              name: item.name,\n              token_id: item.token_id,\n              contract: contract.contract_address\n            };\n          });\n        }\n      }\n      return [];\n    },\n    contracts() {\n      if (this.nftApiResponse.length > 0) {\n        return this.nftApiResponse.map(item => {\n          return {\n            contract: item.contract_address,\n            count: item.assets.length,\n            name: item.contract_name\n          };\n        });\n      }\n      return [];\n    },\n    /**\n     * Pagination\n     */\n    totalPages() {\n      return this.nft.totalPages(this.selectedContract.count);\n    },\n    hasPages() {\n      return this.nft.hasPages(this.selectedContract.count);\n    },\n    startIndex() {\n      return this.nft.startIndex();\n    },\n    endIndex() {\n      return this.nft.endIndex(this.selectedContract.count);\n    },\n    currentPage: {\n      get() {\n        return this.nft.currentPage;\n      },\n      set(value) {\n        return value;\n      }\n    },\n    /**\n     * Display tokens according to page\n     */\n    displayedTokens() {\n      return this.tokens.slice(this.startIndex, this.endIndex);\n    },\n    /**\n     * Check if address is valid\n     */\n    isValid() {\n      return this.nft.isValidAddress(this.toAddress) && this.enoughFunds;\n    }\n  },\n  watch: {\n    balanceInWei() {\n      this.hasMinEth();\n    },\n    web3() {\n      this.loadingContracts = true;\n      this.loadingTokens = true;\n      this.onNftSend = false;\n      this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER.NAME });\n      if (this.network.type.name === ETH.name) {\n        this.setUpNFT();\n      } else {\n        Toast(\n          `NFT Manager not supported in network: ${this.network.type.name}`,\n          {},\n          WARNING\n        );\n        this.nftApiResponse = [];\n      }\n    },\n    address() {\n      this.loadingContracts = true;\n      this.loadingTokens = true;\n      this.onNftSend = false;\n      this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER.NAME });\n      this.setUpNFT();\n    },\n    contracts(newVal) {\n      if (newVal.length > 0) {\n        this.onTab(0);\n      }\n    },\n    async toAddress(newVal) {\n      if (isAddress(newVal)) {\n        const gasTypeFee = this.gasPriceByType(this.gasPriceType);\n        const gasFees = await this.nft.getGasFees(newVal, this.selectedNft);\n        const gasFeesToBN = toBNSafe(gasFees).mul(toBNSafe(gasTypeFee));\n        this.gasFees = gasFeesToBN.toString();\n        if (gasFeesToBN.gte(toBN(this.balanceInWei))) {\n          //gasFeesToBN vs current balance\n          this.enoughFunds = false;\n          this.showBalanceError = true;\n        } else {\n          this.enoughFunds = true;\n          this.showBalanceError = false;\n        }\n      }\n    }\n  },\n  mounted() {\n    this.setUpNFT();\n  },\n  methods: {\n    setUpNFT() {\n      /**\n       * Init NFT Handler\n       */\n      this.nft = new NFT({\n        network: this.network,\n        address: this.address,\n        web3: this.web3\n      });\n\n      this.getNfts();\n      this.localGasPrice = this.gasPriceByType(this.gasPriceType);\n      this.hasMinEth();\n    },\n    getNfts() {\n      this.nft.getNfts().then(res => {\n        this.nftApiResponse = res;\n        this.loadingContracts = false;\n        setTimeout(() => {\n          this.loadingTokens = false;\n        }, 500);\n      });\n    },\n    hasMinEth() {\n      const currentGasPrice = this.localGasPrice;\n      if (\n        toBN(this.balanceInWei).gt(toBN(currentGasPrice).muln(MIN_GAS_LIMIT))\n      ) {\n        this.enoughFunds = true;\n        this.showBalanceError = false;\n      } else {\n        this.enoughFunds = false;\n        this.showBalanceError = true;\n      }\n    },\n    getImageUrl(token) {\n      return this.nft.getImageUrl(token.contract, token.token_id);\n    },\n    onTab(val) {\n      this.activeTab = val;\n      this.selectedContract = this.contracts[val];\n      this.selectedContractHash = this.contracts[val].contract;\n      this.nft.goToFirstPage();\n    },\n    /**\n     * Send NFT\n     */\n    openNftSend(selectedNft) {\n      if (selectedNft) {\n        this.selectedNft = selectedNft;\n      }\n      this.onNftSend = true;\n      this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER_SEND.NAME });\n    },\n    closeNftSend() {\n      this.onNftSend = false;\n      this.toAddress = '';\n      this.$router.push({ name: ROUTES_WALLET.NFT_MANAGER.NAME });\n    },\n    async sendTx() {\n      if (this.isValid) {\n        try {\n          this.nft\n            .send(this.toAddress, this.selectedNft)\n            .then(response => {\n              this.updateValues();\n              this.enoughFunds = true;\n              this.toAddress = '';\n              this.closeNftSend();\n              Toast(\n                'Cheers! Your transaction was mined. Check it in ',\n                {\n                  title: `${getService(this.network.type.blockExplorerTX)}`,\n                  url: this.network.type.blockExplorerTX.replace(\n                    '[[txHash]]',\n                    response.blockHash\n                  )\n                },\n                SUCCESS,\n                5000\n              );\n            })\n            .catch(e => {\n              Toast(e.message, {}, ERROR);\n            });\n        } catch (e) {\n          Toast(e.message, {}, WARNING);\n        }\n      }\n    },\n    updateValues() {\n      const idx = this.tokens.findIndex(\n        item => item.token_id === this.selectedNft.token_id\n      );\n      this.tokens.splice(idx, 1);\n      if (this.tokens.length === 0 && this.contracts.length === 1) {\n        this.hasNoTokens = true;\n      }\n      this.getNfts();\n    },\n    setAddress(address) {\n      if (typeof address === 'object' && !!address) {\n        this.toAddress = address.address;\n      } else {\n        this.toAddress = address;\n      }\n    },\n    /**\n     * Pagination\n     */\n    setPage(number) {\n      this.nft.setCurrentPage(number);\n    }\n  }\n};\n</script>\n<style lang=\"scss\">\n.nft-pagination {\n  .v-pagination__navigation,\n  .v-pagination__item {\n    box-shadow: none;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNftManager.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNftManager.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleNftManager.vue?vue&type=template&id=0f78774c&\"\nimport script from \"./ModuleNftManager.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleNftManager.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModuleNftManager.vue?vue&type=style&index=0&id=0f78774c&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleNftManager.vue?vue&type=style&index=0&id=0f78774c&prod&lang=scss&\""],"sourceRoot":""}