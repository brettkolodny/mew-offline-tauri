{"version":3,"sources":["webpack:///./src/modules/address-book/components/AddressBookAddEdit.vue?58eb","webpack:///./src/modules/address-book/handlers/handlerMulticoins.js","webpack:///src/modules/address-book/components/AddressBookAddEdit.vue","webpack:///./src/modules/address-book/components/AddressBookAddEdit.vue?3c5b","webpack:///./src/modules/address-book/components/AddressBookAddEdit.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","$t","addressToAdd","addressRules","validAddress","resolvedName","nametag","coin","resolvedAddress","on","setAddress","_e","item","resolvedAddr","address","_v","_s","checksumAddressToAdd","nickname","nicknameRules","setNickname","disabled","editMode","nativeOn","$event","update","add","remove","apply","arguments","staticRenderFns","supportedCoins","isValidCoinAddress","WAValidator","validate","valid","name","props","mode","default","type","toAddress","data","nameResolver","currentIdx","computed","mapState","mapGetters","isEmpty","value","isAddress","coinType","addMode","isMyAddress","alreadyExists","checkResolvedExists","storedAddr","checkAddressExists","lowercaseAddressToAdd","watch","web3","mounted","methods","mapActions","reset","resolveAddress","getAddressInfo","resolveName","component"],"mappings":"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AA,iBACA,8DAGA7C,wBAAA,MACA,uCACA,yFACA8C,mCACAlB,2BACAkB,4CACAlB,qCACAA,6BAEAzB,gBACA,yBACA,0CADA,IAGA4C,oBAAA,MACA,gGACAnB,0BACAA,oCACAA,2BAEAV,oBACA,yBAEA8B,mBACA,yBAEAC,uBAAA,YACA,OACA,kIACA,iIAGAC,yBACA,yBACA,mBAGA,qDAIAC,+BAAA,WACA,oEACA,wBACA,MACA,sBACAC,2BACA,QADAA,EACA,qDACAA,gCACA,QADAA,EACA,yDAIAC,8BAAA,WACA,sEACA,wBACA,MACAD,sBACA,iEACA,QADA,EACA,qDACAA,6FAIAvC,gCACA,yEACA,2CAEA,mBAEAyC,iCACA,wCAEAlD,2BAAA,MACA,sCACA,6EADA,GAEA,mBAGAH,wBAAA,MACA,uCACA,6EACA,kBACA,MAGAsD,OACAlB,sBACA,qBAEAvC,yBACA,gBACA,gCACA,sBAEA,oBAGA0D,gBACA,sBACA,qDAEA,yBAIAC,mBAAA,WACA,wBACA,sDACA,+BACA,kCAEA,gBACA,oCACA,iCACA,iDACA,mDAIAC,yCACAC,sDACAC,iBACA,qBACA,iBACA,qBACA,iBAKAC,wFAAA,gGACA,4DAEA,iCACA,mBACA,OAFA,GAAA5D,UAGAA,WAAA,+BACA6D,4BACA,0BACA,0BACA,kBACA,+DACA,OAEA,wFAEA,gBACA,+EAGA,KAIAC,qFAAA,8FACA,2DAEA,mEACA,oBACA,yDAEA,6EAGA,KACAzD,uBACA,yBAEAU,wBACA,iBAEAK,kBACA,+CACA,0BACA,gDACA,4BACA,8DACA,2CACA,wBAEAE,kBACA,gDACA,2CACA,aACA,wBAEAD,eACA,mBACA,cAGA,4BACAZ,kCACAD,kCACAsC,qCACAjC,sEAEA,2CACA,aACA,4BC5W0X,I,YCOtXkD,EAAY,eACd,EACA5E,EACAsC,GACA,EACA,KACA,KACA,MAIa,aAAAsC,E","file":"js/chunk-2d0ddbfd.4090cc03.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"full-width\"},[(_vm.addMode)?_c('mew-input',{attrs:{\"show-blockie\":true,\"label\":_vm.$t('interface.address-book.address'),\"placeholder\":_vm.$t('interface.address-book.enter-addr'),\"value\":_vm.addressToAdd,\"rules\":_vm.addressRules,\"persistent-hint\":_vm.validAddress,\"hint\":_vm.resolvedName || _vm.nametag || _vm.coin,\"resolved-addr\":_vm.resolvedAddress,\"autofocus\":\"\"},on:{\"input\":_vm.setAddress}}):_vm._e(),(_vm.editMode)?_c('div',{staticClass:\"full-width d-flex align-center mb-7\"},[_c('mew-blockie',{staticClass:\"mr-3\",attrs:{\"address\":_vm.item.resolvedAddr ? _vm.item.resolvedAddr : _vm.item.address,\"height\":\"45px\",\"width\":\"45px\"}}),_c('div',{staticClass:\"truncate\"},[_c('h5',{staticClass:\"font-weight-bold\"},[_vm._v(\" \"+_vm._s(_vm.$t('interface.address-book.address'))+\" \")]),_c('div',{staticClass:\"d-flex align-center\"},[_c('span',{staticClass:\"monospace mr-3 truncate\",attrs:{\"id\":\"item-addr\"}},[_vm._v(\" \"+_vm._s(_vm.checksumAddressToAdd)+\" \")]),_c('mew-copy',{attrs:{\"copy-value\":_vm.item.address,\"tooltip\":_vm.$t('common.copy')}})],1)])],1):_vm._e(),_c('mew-input',{staticClass:\"mt-2\",attrs:{\"label\":_vm.$t('interface.address-book.nickname'),\"placeholder\":_vm.nickname ? _vm.nickname : _vm.$t('interface.address-book.enter-nickname'),\"value\":_vm.nickname,\"rules\":_vm.nicknameRules},on:{\"input\":_vm.setNickname}}),_c('div',{staticClass:\"text-center mt-4\"},[_c('mew-button',{attrs:{\"disabled\":_vm.disabled,\"title\":_vm.editMode\n          ? _vm.$t('interface.address-book.update')\n          : _vm.$t('common.confirm-add'),\"btn-size\":\"xlarge\"},nativeOn:{\"click\":function($event){_vm.editMode ? _vm.update() : _vm.add()}}})],1),(_vm.editMode)?_c('div',{staticClass:\"mt-4 text-center\"},[_c('mew-button',{attrs:{\"title\":_vm.$t('interface.address-book.remove-addr'),\"has-full-width\":false,\"btn-size\":\"small\",\"btn-style\":\"transparent\"},nativeOn:{\"click\":function($event){return _vm.remove.apply(null, arguments)}}})],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import WAValidator from 'multicoin-address-validator';\n\n/*\nconst supportedCoins = [\n  'Ethereum',\n  'EthereumClassic',\n  'LiteCoin',\n  'Bitcoin',\n  'DogeCoin',\n  'MonaCoin',\n  'Ripple',\n  'BitcoinCash'\n];\n*/\n\nconst supportedCoins = [\n  'Ethereum',\n  'Bitcoin',\n  //'0x', // ETHValidator\n  // 'Aave Coin',\n  'Algorand',\n  //'Aragon', // ETHValidator\n  // 'Augur',\n  // 'AugurV2',\n  'AuroraCoin',\n  //'Bancor', // ETHValidator\n  //'Bankex', // ETHValidator\n  //'Basic Attention Token', //ETHValidator\n  'BeaverCoin',\n  //'Binance', (no validator is included in the library)\n  'BioCoin',\n  'Bitcoin SV',\n  'BitcoinCash',\n  'BitcoinGold',\n  'BitcoinPrivate',\n  'BitcoinZ',\n  // 'BlockTrade',\n  // 'BTU Protocol',\n  //'Callisto', // ETHValidator\n  'Cardano',\n  // 'Chainlink',\n  //'Civic',\n  // 'Compound',\n  // 'Cred',\n  'Crypto.com Coin',\n  // 'CUSD',\n  'Dash',\n  // 'Decentraland',\n  'Decred',\n  'DigiByte',\n  //'District0x',\n  'DogeCoin',\n  // 'Enjin Coin',\n  //'EOS', // Non-existent accounts are valid\n  //'EthereumClassic', // ETHValidator\n  //'EtherZero', // ETHValidator\n  // 'Expanse',\n  // 'FirmaChain',\n  'FreiCoin',\n  //'GameCredits', // ETHValidator\n  'GarliCoin',\n  //'Gnosis',\n  //'Golem',\n  //'Golem (GNT)',\n  // 'HedgeTrade',\n  'Hush',\n  'HyperSpace',\n  // 'iExec RLC',\n  'Komodo',\n  'LBRY Credits',\n  'Lisk',\n  'LiteCoin',\n  'loki',\n  // 'Loom Network',\n  // 'Maker',\n  // 'Matchpool',\n  // 'Matic',\n  'MegaCoin',\n  // 'Melon',\n  // 'Metal',\n  'MonaCoin',\n  'Monero',\n  // 'Multi-collateral DAI',\n  'NameCoin',\n  'Nano',\n  'Nem',\n  'Neo',\n  'NeoGas',\n  // 'Numeraire',\n  // 'Ocean Protocol',\n  // 'Odyssey',\n  // 'OmiseGO',\n  // 'Paxos',\n  'PeerCoin',\n  'PIVX',\n  'Polkadot',\n  // 'Polymath',\n  'PrimeCoin',\n  'ProtoShares',\n  'Qtum',\n  // 'Quant',\n  // 'Quantum Resistant Ledger',\n  'RaiBlocks',\n  // 'Ripio Credit Network',\n  'Ripple',\n  // 'Salt',\n  // 'Serve',\n  'Siacoin',\n  'SnowGem',\n  //'Solana', (no validator is included in the library)\n  'SolarCoin',\n  // 'SOLVE',\n  // 'Spendcoin',\n  // 'Status',\n  'Stellar',\n  // 'Storj',\n  // 'Storm',\n  // 'StormX',\n  // 'Swarm City',\n  // 'Synthetix Network',\n  // 'Tap',\n  // 'TEMCO',\n  // 'TenX',\n  'Tether',\n  'Tezos',\n  'Tron',\n  // 'TrueUSD',\n  // 'Uniswap Coin',\n  // 'USD Coin',\n  // 'VeChain',\n  'VertCoin',\n  // 'Viberate',\n  'VoteCoin',\n  'Waves',\n  // 'Wings',\n  'ZCash',\n  'ZClassic',\n  'ZenCash'\n];\n\nfunction isValidCoinAddress(address) {\n  for (const coin of supportedCoins) {\n    if (WAValidator.validate(address, coin)) {\n      return { coin: coin, valid: true };\n    }\n  }\n  return { coin: '', valid: false };\n}\n\nexport { isValidCoinAddress };\n","<template>\n  <div class=\"full-width\">\n    <!--\n  =====================================================================================\n    Address Book - add address mode\n  =====================================================================================\n  -->\n    <mew-input\n      v-if=\"addMode\"\n      :show-blockie=\"true\"\n      :label=\"$t('interface.address-book.address')\"\n      :placeholder=\"$t('interface.address-book.enter-addr')\"\n      :value=\"addressToAdd\"\n      :rules=\"addressRules\"\n      :persistent-hint=\"validAddress\"\n      :hint=\"resolvedName || nametag || coin\"\n      :resolved-addr=\"resolvedAddress\"\n      autofocus\n      @input=\"setAddress\"\n    />\n    <!--\n  =====================================================================================\n    Address Book - edit mode\n  =====================================================================================\n  -->\n    <div v-if=\"editMode\" class=\"full-width d-flex align-center mb-7\">\n      <mew-blockie\n        class=\"mr-3\"\n        :address=\"item.resolvedAddr ? item.resolvedAddr : item.address\"\n        height=\"45px\"\n        width=\"45px\"\n      />\n      <div class=\"truncate\">\n        <h5 class=\"font-weight-bold\">\n          {{ $t('interface.address-book.address') }}\n        </h5>\n        <div class=\"d-flex align-center\">\n          <span id=\"item-addr\" class=\"monospace mr-3 truncate\">\n            {{ checksumAddressToAdd }}\n          </span>\n          <mew-copy :copy-value=\"item.address\" :tooltip=\"$t('common.copy')\" />\n        </div>\n      </div>\n    </div>\n    <!--\n  =====================================================================================\n    Address Book - add/edit nickname\n  =====================================================================================\n  -->\n    <mew-input\n      class=\"mt-2\"\n      :label=\"$t('interface.address-book.nickname')\"\n      :placeholder=\"\n        nickname ? nickname : $t('interface.address-book.enter-nickname')\n      \"\n      :value=\"nickname\"\n      :rules=\"nicknameRules\"\n      @input=\"setNickname\"\n    />\n    <!--\n  =====================================================================================\n    Address Book - save\n  =====================================================================================\n  -->\n    <div class=\"text-center mt-4\">\n      <mew-button\n        :disabled=\"disabled\"\n        :title=\"\n          editMode\n            ? $t('interface.address-book.update')\n            : $t('common.confirm-add')\n        \"\n        btn-size=\"xlarge\"\n        @click.native=\"editMode ? update() : add()\"\n      />\n    </div>\n    <!--\n  =====================================================================================\n    Address Book - remove address\n  =====================================================================================\n  -->\n    <div v-if=\"editMode\" class=\"mt-4 text-center\">\n      <mew-button\n        :title=\"$t('interface.address-book.remove-addr')\"\n        :has-full-width=\"false\"\n        btn-size=\"small\"\n        btn-style=\"transparent\"\n        @click.native=\"remove\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState, mapActions, mapGetters } from 'vuex';\nimport { isEmpty, throttle } from 'lodash';\nimport { getAddressInfo } from '@kleros/address-tags-sdk';\n\nimport NameResolver from '@/modules/name-resolver/index';\nimport { toChecksumAddress, isAddress } from '@/core/helpers/addressUtils';\nimport { isValidCoinAddress } from '../handlers/handlerMulticoins.js';\n\nconst modes = ['add', 'edit'];\n\nexport default {\n  name: 'AddressBookAddEdit',\n  props: {\n    mode: { default: modes[0], type: String },\n    item: { default: () => {}, type: Object },\n    toAddress: { default: '', type: String }\n  },\n  data() {\n    return {\n      resolvedAddr: '',\n      nameResolver: null,\n      currentIdx: null,\n      nickname: '',\n      addressToAdd: '',\n      nametag: ''\n    };\n  },\n  computed: {\n    ...mapState('wallet', ['address', 'web3']),\n    ...mapState('addressBook', ['addressBookStore']),\n    ...mapGetters('global', ['network']),\n    disabled() {\n      if (this.addMode) {\n        return (\n          !this.addressToAdd ||\n          !this.validAddress ||\n          isEmpty(this.nickname) ||\n          this.nickname?.length > 20 ||\n          this.alreadyExists\n        );\n      }\n      if (this.editMode) {\n        return (\n          this.nickname === this.item.nickname ||\n          this.nickname?.length > 20 ||\n          isEmpty(this.nickname)\n        );\n      }\n      return true;\n    },\n    addressRules() {\n      return [\n        () =>\n          !this.alreadyExists ||\n          this.$t('interface.address-book.validations.already-exists'),\n        this.validAddress ||\n          this.$t('interface.address-book.validations.invalid-address'),\n        value =>\n          !!value || this.$t('interface.address-book.validations.addr-required')\n      ];\n    },\n    nicknameRules() {\n      return [\n        value =>\n          (value && value.length >= 1) ||\n          this.$t('interface.address-book.validations.nickname-required'),\n        value =>\n          (value && value.length <= 20) ||\n          this.$t('interface.address-book.validations.nickname-length')\n      ];\n    },\n    validAddress() {\n      if (this.addressToAdd.length > 94) return false;\n      return this.resolvedAddr.length > 0 && !this.resolvedAddr?.includes('.')\n        ? isAddress(this.resolvedAddr) ||\n            isValidCoinAddress(this.resolvedAddr).valid\n        : isAddress(this.lowercaseAddressToAdd) ||\n            isValidCoinAddress(this.lowercaseAddressToAdd).valid ||\n            isValidCoinAddress(this.addressToAdd).valid;\n    },\n    coin() {\n      if (!this.validAddress) return '';\n      return `Valid ${this.coinType} address`;\n    },\n    coinType() {\n      return this.resolvedAddr.length > 0 && !this.resolvedAddr?.includes('.')\n        ? isValidCoinAddress(this.resolvedAddr).coin\n        : isValidCoinAddress(this.lowercaseAddressToAdd).coin ||\n            isValidCoinAddress(this.addressToAdd).coin;\n    },\n    editMode() {\n      return this.mode === modes[1];\n    },\n    addMode() {\n      return this.mode === modes[0];\n    },\n    isMyAddress() {\n      return (\n        this.address?.toLowerCase() === this.addressToAdd?.toLowerCase() ||\n        this.address?.toLowerCase() === this.resolvedAddr?.toLowerCase()\n      );\n    },\n    alreadyExists() {\n      if (this.addMode) {\n        if (this.isMyAddress) {\n          return true;\n        }\n        return this.checkResolvedExists || this.checkAddressExists;\n      }\n      return false;\n    },\n    checkResolvedExists() {\n      return Object.keys(this.addressBookStore).some(key => {\n        const storedAddr = this.addressBookStore[key];\n        return (\n          this.resolvedAddr !== '' &&\n          (storedAddr.address.toLowerCase() ===\n            this.resolvedAddr?.toLowerCase() ||\n            storedAddr.resolvedAddr.toLowerCase() ===\n              this.resolvedAddr?.toLowerCase())\n        );\n      });\n    },\n    checkAddressExists() {\n      return Object.keys(this.addressBookStore).some(key => {\n        const storedAddr = this.addressBookStore[key];\n        return (\n          (storedAddr.resolvedAddr !== '' &&\n            storedAddr.resolvedAddr?.toLowerCase() ===\n              this.addressToAdd?.toLowerCase()) ||\n          storedAddr.address.toLowerCase() === this.addressToAdd?.toLowerCase()\n        );\n      });\n    },\n    checksumAddressToAdd() {\n      if (this.addressToAdd !== '' && isAddress(this.lowercaseAddressToAdd)) {\n        return toChecksumAddress(this.lowercaseAddressToAdd);\n      }\n      return this.addressToAdd;\n    },\n    lowercaseAddressToAdd() {\n      return this.addressToAdd.toLowerCase();\n    },\n    resolvedAddress() {\n      if (this.resolvedAddr.length === 0) return '';\n      return this.validAddress && !this.resolvedAddr?.includes('.')\n        ? this.resolvedAddr\n        : '';\n    },\n    resolvedName() {\n      if (this.resolvedAddr.length === 0) return '';\n      return this.validAddress && this.resolvedAddr?.includes('.')\n        ? this.resolvedAddr\n        : '';\n    }\n  },\n  watch: {\n    toAddress(newVal) {\n      this.addressToAdd = newVal;\n    },\n    addressToAdd(newVal) {\n      this.nametag = '';\n      if (isAddress(newVal.toLowerCase())) {\n        this.resolveAddress();\n      } else {\n        this.resolveName();\n      }\n    },\n    web3() {\n      if (this.network.type.ens) {\n        this.nameResolver = new NameResolver(this.network, this.web3);\n      } else {\n        this.nameResolver = null;\n      }\n    }\n  },\n  mounted() {\n    if (this.network.type.ens)\n      this.nameResolver = new NameResolver(this.network, this.web3);\n    if (this.addMode && this.toAddress) {\n      this.addressToAdd = this.toAddress;\n    }\n    if (this.editMode) {\n      this.addressToAdd = this.item.address;\n      this.nickname = this.item.nickname;\n      this.currentIdx = this.addressBookStore.findIndex(\n        item => item.address === this.item.address\n      );\n    }\n  },\n  methods: {\n    ...mapActions('addressBook', ['setAddressBook']),\n    reset() {\n      this.addressToAdd = '';\n      this.nickname = '';\n      this.resolvedAddr = '';\n      this.nametag = '';\n    },\n    /**\n     * Resolves address and @returns name\n     */\n    resolveAddress: throttle(async function () {\n      if (this.nameResolver) {\n        try {\n          const resolvedName = await this.nameResolver.resolveAddress(\n            this.addressToAdd\n          );\n          if (resolvedName && !resolvedName.name) {\n            await getAddressInfo(\n              this.checksumAddressToAdd,\n              'https://ipfs.kleros.io'\n            ).then(data => {\n              this.nametag = data?.publicNameTag || '';\n            });\n          }\n          this.resolvedAddr = resolvedName.name ? resolvedName.name : '';\n        } catch (e) {\n          this.nametag = '';\n          this.resolvedAddr = '';\n        }\n      }\n    }, 300),\n    /**\n     * Resolves name and @returns address\n     */\n    resolveName: throttle(async function () {\n      if (this.nameResolver) {\n        try {\n          await this.nameResolver.resolveName(this.addressToAdd).then(addr => {\n            this.resolvedAddr = addr;\n          });\n        } catch (e) {\n          this.resolvedAddr = '';\n        }\n      }\n    }, 500),\n    setAddress(value) {\n      this.addressToAdd = value ? value : '';\n    },\n    setNickname(value) {\n      this.nickname = value;\n    },\n    update() {\n      this.addressBookStore[this.currentIdx].address =\n        this.checksumAddressToAdd;\n      this.addressBookStore[this.currentIdx].coinType =\n        this.coinType.toLowerCase();\n      this.addressBookStore[this.currentIdx].nickname = this.nickname;\n      this.setAddressBook(this.addressBookStore);\n      this.$emit('back', [3]);\n    },\n    remove() {\n      this.addressBookStore.splice(this.currentIdx, 1);\n      this.setAddressBook(this.addressBookStore);\n      this.reset();\n      this.$emit('back', [3]);\n    },\n    add() {\n      if (this.alreadyExists) {\n        this.reset();\n        return;\n      }\n      this.addressBookStore.push({\n        address: this.checksumAddressToAdd,\n        resolvedAddr: this.resolvedAddress,\n        coinType: this.coinType.toLowerCase(),\n        nickname: this.nickname || (this.addressBookStore.length + 1).toString()\n      });\n      this.setAddressBook(this.addressBookStore);\n      this.reset();\n      this.$emit('back', [3]);\n    }\n  }\n};\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddressBookAddEdit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AddressBookAddEdit.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AddressBookAddEdit.vue?vue&type=template&id=d5ddd684&\"\nimport script from \"./AddressBookAddEdit.vue?vue&type=script&lang=js&\"\nexport * from \"./AddressBookAddEdit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}