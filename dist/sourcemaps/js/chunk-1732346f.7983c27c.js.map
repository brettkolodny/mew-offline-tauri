{"version":3,"sources":["webpack:///./src/assets/images/icons/hardware-wallets/icon-coolwallet.svg","webpack:///./src/assets/images/icons/hardware-wallets/icon-bitbox.svg","webpack:///./src/assets/images/icons/hardware-wallets/icon-keepkey.svg","webpack:///./src/assets/images/icons/hardware-wallets/Ledger-Nano-X-Label-Icon.svg","webpack:///./src/modules/access-wallet/ModuleAccessWalletHardware.vue?903b","webpack:///./src/assets/images/icons/hardware-wallets/icon-trezor.svg","webpack:///./src/modules/access-wallet/ModuleAccessWalletHardware.vue?4855","webpack:///./src/modules/access-wallet/hardware/handlers/hardwares/ledger/appPaths.js","webpack:///./src/modules/access-wallet/hardware/handlers/configs/configWallets.js","webpack:///src/modules/access-wallet/ModuleAccessWalletHardware.vue","webpack:///./src/modules/access-wallet/ModuleAccessWalletHardware.vue?7a3b","webpack:///./src/modules/access-wallet/ModuleAccessWalletHardware.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","attrs","text","step","linkTitle","footerLink","title","link","url","open","showBack","back","overlayClose","class","$vuetify","breakpoint","xs","sm","staticClass","_v","_e","_l","button","key","label","staticStyle","nativeOn","$event","bluetooth","bluetoothModal","setWalletInstance","icon","_s","model","value","callback","$$v","expression","browser","i","direction","browserIndex","s","index","length","walletInitialized","paths","setPath","hwWalletInstance","bitbox02Unlock","bitBox2NotPaired","bitBox2Connected","bitBox2Unpaired","bitBox2PairingCode","bitBox2Confirmed","bitBox2Initialized","selectedPath","loaded","coolWalletUnlock","passwordError","on","setPassword","onLedger","onLedgerX","nextStep","ledgerApps","setBluetoothLedgerUnlock","trezorUnlock","reset","onKeepkey","switchAddress","setHardwareWallet","staticRenderFns","appList","network","ETH","ledgerEthereum","ledgerLiveEthereum","ETC","ledgerEthereumClassic","ledgerLiveEthereumClassic","GO","goChain","XDC","xdcnetwork","WALLET_TYPES","LEDGER","create","LedgerWallet","when","hasPaths","requiresPassword","TREZOR","TrezorWallet","BITBOX2","BitBox02Wallet","KEEPKEY","KeepkeyWallet","COOL_WALLET","CoolWallet","name","components","AccessWalletKeepkey","AccessWalletCoolWallet","AccessWalletTrezor","AccessWalletLedger","AccessWalletLedgerX","AccessWalletAddressNetwork","AccessWalletBitbox","filters","concatAddress","val","mixins","props","type","default","close","data","buttons","enableBluetooth","steps","supportedBrowsers","img","wallets","ledgerApp","walletType","selectedLedgerApp","password","ledgerConnected","unwatch","transport","address","ledgerBluetooth","computed","mapGetters","mapState","onBitbox2","onCoolWallet","isEmpty","onTrezor","onPassword","appPaths","newArr","allPaths","bitbox2Titles","watch","handler","deep","mounted","EventBus","navigator","Toast","beforeDestroy","methods","mapActions","setupSwitchAddress","closeAndSetupSwitch","trezorClose","ledgerUnlock","bluetoothLedgerUnlock","keepkeyUnlock","unlockPathOnly","then","init","catch","unlockPathAndPassword","e","component"],"mappings":"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BAAA,OACA,iDACAC,sCAAA,OACA,sFAGAC,8BAAA,yDAEAC,SACAC,0BAEA,4DACAC,WACAA,aAIAC,gBACAC,OACAxG,MACAyG,aACAC,YAEAC,OACAF,cACAC,sBAEA7C,eACA4C,aACAC,aAGAE,gBAAA,OACAC,SACA,CACA9F,eACAO,eACAmF,oBAEA,CACA1F,eACAO,eACAmF,oBAEA,CACA1F,gBACAO,gBACAmF,qBAEA,CACA1F,iBACAO,eACAmF,qBAEA,CACA1F,mBACAO,eACAmF,wBACAtF,eAGA2F,iBACA,CACAjH,eACAkC,WACA,CACAlC,kCACAkH,OACA,uCACA,+DACA,8DAGA,CACAlH,oCACAkH,OACA,CACAjH,+FAMA,CACAD,cACAkC,WACA,CACAlC,kCACAkH,OACA,8DACA,+DAKA,CACAlH,aACAkC,WACA,CACAlC,oCACAkH,OACA,CACAjH,sKAOAqB,aACAC,kBACA4F,4CACAxD,8BACA,OACAmC,yBACAlE,qBACAwF,uBAGAC,UACAxH,OACA6C,oBACA4E,aACApE,cACA4C,kBACAlE,mBAEA2F,cACAC,qBACAC,YACAtE,UACAuE,mBACA7F,sBACA8F,qBACAtE,iBACAuE,eACAC,WACAC,qBAEAC,wEACAC,iDACAA,2CACAC,yDACA1F,6BAAA,MACA,qCACA,QADA,EACA,yDACA,GAKAd,gBAAA,WACA,6BACA,0BACA,oDAEA,0CAEA,0BAMA1B,sBAyBA,OACAC,yBACAE,4EAGAE,oBACA,0BACA,cAGA,eAKA8H,qBACA,yCAKA1E,oBACA,uCAKAC,qBACA,wCAKA0E,wBACA,OACA,sCACAC,6CAMArE,qBACA,yCAKAsE,oBACA,wCAKAC,sBACA,MACA,sBACA,+BACA,iDACA,+BAMA9F,iBAAA,WACA,KACA,oCACA,6BACA,0BACA,oDAEA,uBACA,0BACA,OACAsD,aACAlE,iBAKA2G,gCACAC,QACA1C,aACAlE,kBAeA,OAVA,+BACA,wCAEA6G,6CACAD,QACA1C,aACAlE,kBAIA,GAKA5B,iBACA,2CACA,iCACA,6BACA,cACA,2BAEA,kCACA,gBACA,oCACA,4BAEA4C,4BAAA,MACA,OACAwF,8CACA,wGAGAvF,4BAAA,MACA,OACA,qGAGAC,2BAAA,MACA,OACA,oGAGAG,8BAAA,MACA,OACA,uBACA,gFAGAF,8BAAA,MACA,mGAEAC,4BAAA,MACA,+BACA,QADA,EACA,+DAGA0F,yBACA,uDACA,4CACA,wBACA,mDACA,0DAGAC,OACAzF,cACA0F,mBAKA,gEACA,yBACA,8CAGAC,SAEA1I,iBACA,mDAGA2I,mBAAA,4JASA,GALAC,uCACA,aACA,WAGAC,wBACA1H,GAAA,+EACAA,oBAAA,+EAEA2H,+BAAA,yDAbA,IAgBAC,yBACAH,8BAEAI,yCACAC,yBACA,YACA,qBACA,kBACA,IAIAtF,iBACA,YACA,yBACA,gCAEA,iBACA,mBACA,wBACA,yBAKAuF,8BACA,gCACA,kCACA,qCAEA,iBAKAC,+BACA,aACA,0BACA,cAMAjJ,gBACA,YACA,cACA,aACA,eACA,YACA,qBAEA,yBACA,8BACA,aAGA,mBACA,cAIA,4BAGAC,wBACA,aACA,4BAEAiJ,uBACA,YACA,+BAEA/H,8BACA,uBACA,iBAEAkC,oBACA,qBACA,YAEA,gBACA,gDAEA,iCACA,qCACA,4CACA,8CAOA8F,wBACA,qBACA,6BAEA,uBAGA5F,oCACA,wBACA,iBAEA6F,iCACA,uBAEA5F,wBACA,uBAEAlB,0BACA,uBAEA+G,yBACA,uBAEAtG,4BACA,gDAKAuG,0BAAA,aACA,2CACA,0CACA,QADA,EACA,8CACA,kBACA,oBACA,8BACA1E,iDACA2E,kBACA,IAKA,GAJA,aACA,wCACA,sCACA,SACA,aAEA,GADA,sBACA,mBAIA,YAHA,4CACA,uBAIA,mBACAC,OACAD,iBACA,gBAEAE,mBACA,+CACA,uCACA,kBAIA,qBAEA,SACA,mDAGAA,oBACA,mCACA,wBACA,+CAEAb,4BAEA,uCAMAc,oCAAA,WACA,8BACA9E,YACA2E,kBACA,qBACA,YAEAE,mBACA,wBAEAE,8BACA,kCAEA,mBAEA,+CAGAf,4BAEA,8BACA,cAOAxG,oBACA,qBAKAwB,8BAAA,WACA,IACA,oBACA2F,iBACA,kCACA,iBAMA,UACA,YANA,8BACA,wCAEA,gBAAA9D,iCAMAgE,mBACA,UACAb,+BAEA,SACA,aACAA,8BAMA1F,wBACA,gBACA,0BC/1BmX,I,wBCQ/W0G,EAAY,eACd,EACA7K,EACA8E,GACA,EACA,KACA,WACA,MAIa,aAAA+F,E","file":"js/chunk-1732346f.7983c27c.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/icon-coolwallet.4c335d0a.svg\";","module.exports = __webpack_public_path__ + \"img/icon-bitbox.3c28f39d.svg\";","module.exports = __webpack_public_path__ + \"img/icon-keepkey.c6b6496f.svg\";","module.exports = __webpack_public_path__ + \"img/Ledger-Nano-X-Label-Icon.e56dc6a3.svg\";","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleAccessWalletHardware.vue?vue&type=style&index=0&id=0bfbf6a2&prod&lang=scss&scoped=true&\"","module.exports = __webpack_public_path__ + \"img/icon-trezor.19f6da90.svg\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('mew-overlay',{attrs:{\"footer\":{\n      text: _vm.step === 1 ? 'Need help? Read about' : 'Need help? Read',\n      linkTitle: _vm.footerLink.title,\n      link: _vm.footerLink.url\n    },\"show-overlay\":_vm.open,\"title\":_vm.title,\"back\":_vm.showBack ? null : _vm.back,\"close\":_vm.overlayClose,\"content-size\":\"xlarge\"}},[(_vm.step === 1)?_c('div',{class:[\n        'pa-5 mb-4 full-width text-center rounded subtitle-container',\n        _vm.$vuetify.breakpoint.xs || _vm.$vuetify.breakpoint.sm ? 'mt-3' : ''\n      ]},[_c('span',{staticClass:\"full-width\"},[_vm._v(\"The highest standard of security in the crypto space. \"),_c('router-link',{attrs:{\"to\":\"/buy-hardware\"}},[_vm._v(\" Get a Hardware Wallet today \")])],1)]):_vm._e(),(_vm.step === 1)?_c('div',[_c('v-row',{attrs:{\"dense\":\"\",\"no-gutters\":\"\",\"justify\":\"start\"}},_vm._l((_vm.buttons),function(button){return _c('v-col',{key:button.label,staticClass:\"button-container full-width pa-1\",attrs:{\"cols\":\"12\",\"sm\":\"6\"}},[_c('mew-button',{staticStyle:{\"height\":\"90px\"},attrs:{\"has-full-width\":\"\",\"color-theme\":\"greyMedium\",\"btn-style\":\"outline\"},nativeOn:{\"click\":function($event){button.bluetooth && !_vm.bluetooth\n                ? (_vm.bluetoothModal = true)\n                : _vm.setWalletInstance(button)}}},[_c('div',{staticClass:\"text-left d-flex align-center\",staticStyle:{\"width\":\"100%\"}},[_c('img',{staticClass:\"mr-4\",attrs:{\"width\":\"40\",\"src\":button.icon}}),_c('div',{staticClass:\"mew-heading-3 textDark--text\"},[_vm._v(\" \"+_vm._s(button.label)+\" \")])])])],1)}),1)],1):_vm._e(),_c('v-dialog',{attrs:{\"persistent\":\"\",\"max-width\":\"500\"},model:{value:(_vm.bluetoothModal),callback:function ($$v) {_vm.bluetoothModal=$$v},expression:\"bluetoothModal\"}},[_c('v-sheet',{staticClass:\"pa-5\",attrs:{\"color\":\"white\"}},[_c('h2',{staticClass:\"mb-5 text-center\"},[_vm._v(\"Bluetooth Required\")]),_c('v-list',[_c('h3',[_vm._v(\"Supported Browsers\")]),_vm._l((_vm.supportedBrowsers),function(browser,i){return _c('v-list-item',{key:i},[_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(\" \"+_vm._s(browser)+\" \")])],1)],1)})],2),_c('h4',{staticClass:\"mb-5\"},[_vm._v(\"* Remember to enable bluetooth on your device\")]),_c('h3',{staticClass:\"mb-5 text-center\"},[_vm._v(\"Enable bluetooth on supported browsers\")]),_vm._l((_vm.enableBluetooth),function(browser,i){return _c('v-expansion-panels',{key:i,staticClass:\"mt-1\",attrs:{\"accordion\":\"\"}},[_c('v-expansion-panel',[_c('v-expansion-panel-header',[_vm._v(\" \"+_vm._s(browser.title)+\" \")]),_vm._l((browser.direction),function(direction,browserIndex){return _c('v-expansion-panel-content',{key:browserIndex},[_c('h4',{staticClass:\"mb-3\"},[_vm._v(_vm._s(direction.title))]),_vm._l((direction.steps),function(s,index){return _c('ul',{key:index},[(s.length)?_c('li',{staticClass:\"mb-1\"},[_vm._v(\" \"+_vm._s(s)+\" \")]):_vm._e(),(!s.length)?_c('li',{staticClass:\"mb-1\"},[_c('a',{attrs:{\"href\":s.link,\"target\":\"_blank\"}},[_vm._v(\"Learn More\")])]):_vm._e()])})],2)})],2)],1)}),_c('div',{staticClass:\"text-center\"},[_c('mew-button',{staticClass:\"mt-6\",attrs:{\"title\":\"Close\",\"btn-size\":\"xlarge\",\"btn-style\":\"outline\"},nativeOn:{\"click\":function($event){_vm.bluetoothModal = false}}})],1)],2)],1),(_vm.step <= _vm.walletInitialized)?_c('div',{staticClass:\"full-width\"},[(_vm.onBitbox2)?_c('access-wallet-bitbox',{attrs:{\"paths\":_vm.paths,\"set-path\":_vm.setPath,\"hw-wallet-instance\":_vm.hwWalletInstance,\"unlock\":_vm.bitbox02Unlock,\"device-not-paired\":_vm.bitBox2NotPaired,\"device-connected\":_vm.bitBox2Connected,\"device-unpaired\":_vm.bitBox2Unpaired,\"device-pairing-code\":_vm.bitBox2PairingCode,\"device-confirmed\":_vm.bitBox2Confirmed,\"device-initialized\":_vm.bitBox2Initialized}}):_vm._e(),(_vm.onKeepkey)?_c('access-wallet-keepkey',{attrs:{\"paths\":_vm.paths,\"selected-path\":_vm.selectedPath,\"handler-loaded\":_vm.loaded,\"set-path\":_vm.setPath}}):_vm._e(),(_vm.onCoolWallet)?_c('access-wallet-cool-wallet',{attrs:{\"cool-wallet-unlock\":_vm.coolWalletUnlock,\"password-error\":_vm.passwordError},on:{\"password\":_vm.setPassword}}):_vm._e(),(_vm.onLedger || _vm.onLedgerX)?_c('access-wallet-ledger',{attrs:{\"ledger-unlock\":_vm.nextStep,\"ledger-apps\":_vm.ledgerApps,\"paths\":_vm.paths,\"selected-path\":_vm.selectedPath,\"set-path\":_vm.setPath},on:{\"setBluetoothLedgerUnlock\":_vm.setBluetoothLedgerUnlock}}):_vm._e(),(_vm.onTrezor)?_c('div',[_c('access-wallet-trezor',{attrs:{\"trezor-unlock\":_vm.trezorUnlock,\"reset\":_vm.reset}})],1):_vm._e()],1):_vm._e(),(_vm.step > _vm.walletInitialized)?_c('access-wallet-address-network',{attrs:{\"back\":null,\"hide-path-selection\":_vm.onKeepkey || _vm.onLedger,\"disable-custom-paths\":_vm.onLedger,\"handler-wallet\":_vm.hwWalletInstance,\"selected-path\":_vm.selectedPath,\"paths\":_vm.paths,\"hide-networks\":_vm.switchAddress},on:{\"unlock\":_vm.setHardwareWallet,\"setPath\":_vm.setPath}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { ETC, ETH, GO, XDC } from '@/utils/networks/types';\nimport {\n  ledgerEthereum,\n  ledgerLiveEthereum,\n  ledgerEthereumClassic,\n  ledgerLiveEthereumClassic,\n  goChain,\n  xdcnetwork\n} from '@/modules/access-wallet/hardware/handlers/configs/configPaths';\nconst appList = [\n  {\n    network: ETH,\n    paths: [ledgerEthereum, ledgerLiveEthereum]\n  },\n  {\n    network: ETC,\n    paths: [ledgerEthereumClassic, ledgerLiveEthereumClassic]\n  },\n  {\n    network: GO,\n    paths: [goChain]\n  },\n  {\n    network: XDC,\n    paths: [xdcnetwork]\n  }\n];\nexport default appList;\n","import WALLET_TYPES from '@/modules/access-wallet/common/walletTypes';\n\nimport {\n  LedgerWallet,\n  TrezorWallet,\n  BitBox02Wallet,\n  KeepkeyWallet,\n  CoolWallet\n} from '@/modules/access-wallet/common';\n\n/**\n * different types of available hardware wallets\n */\n/**\n *  create: @Object imported wallet handler,\n *  when: @Integer which step your wallet should attempt to unlock,\n *  hasPaths: @Boolean whether your hardware wallet has supported paths,\n *  requiresPassword: @Boolean whether your hardware wallet requires password,\n *  title: @String Header title for your wallet\n */\nexport default {\n  [WALLET_TYPES.LEDGER]: {\n    create: LedgerWallet,\n    when: 3,\n    hasPaths: false,\n    requiresPassword: false,\n    title: 'Connect your Ledger'\n  },\n  [WALLET_TYPES.TREZOR]: {\n    create: TrezorWallet,\n    when: 2,\n    hasPaths: true,\n    requiresPassword: false,\n    title: 'Connect your Trezor'\n  },\n  [WALLET_TYPES.BITBOX2]: {\n    create: BitBox02Wallet,\n    when: 2,\n    hasPaths: false,\n    requiresPassword: false,\n    title: 'Connect your BitBox02'\n  },\n  [WALLET_TYPES.KEEPKEY]: {\n    create: KeepkeyWallet,\n    when: 2,\n    hasPaths: true,\n    requiresPassword: false,\n    title: 'Connect your KeepKey'\n  },\n  [WALLET_TYPES.COOL_WALLET]: {\n    create: CoolWallet,\n    when: 2,\n    hasPaths: false,\n    requiresPassword: true,\n    title: 'Enter pairing password'\n  }\n};\n","<template>\n  <!--\n=====================================================================================\n  Overlay - access using hardware\n=====================================================================================\n-->\n  <mew-overlay\n    :footer=\"{\n      text: step === 1 ? 'Need help? Read about' : 'Need help? Read',\n      linkTitle: footerLink.title,\n      link: footerLink.url\n    }\"\n    :show-overlay=\"open\"\n    :title=\"title\"\n    :back=\"showBack ? null : back\"\n    :close=\"overlayClose\"\n    content-size=\"xlarge\"\n  >\n    <div\n      v-if=\"step === 1\"\n      :class=\"[\n        'pa-5 mb-4 full-width text-center rounded subtitle-container',\n        $vuetify.breakpoint.xs || $vuetify.breakpoint.sm ? 'mt-3' : ''\n      ]\"\n    >\n      <span class=\"full-width\"\n        >The highest standard of security in the crypto space.\n        <router-link to=\"/buy-hardware\">\n          Get a Hardware Wallet today\n        </router-link>\n      </span>\n    </div>\n    <!--\n        =====================================================================================\n        Step 1: Select hardware wallet\n        =====================================================================================\n        -->\n    <div v-if=\"step === 1\">\n      <!--\n      =====================================================================================\n        Different hardware instances\n      =====================================================================================\n      -->\n      <v-row dense no-gutters justify=\"start\">\n        <v-col\n          v-for=\"button in buttons\"\n          :key=\"button.label\"\n          class=\"button-container full-width pa-1\"\n          cols=\"12\"\n          sm=\"6\"\n        >\n          <mew-button\n            has-full-width\n            style=\"height: 90px\"\n            color-theme=\"greyMedium\"\n            btn-style=\"outline\"\n            @click.native=\"\n              button.bluetooth && !bluetooth\n                ? (bluetoothModal = true)\n                : setWalletInstance(button)\n            \"\n          >\n            <div class=\"text-left d-flex align-center\" style=\"width: 100%\">\n              <img width=\"40\" class=\"mr-4\" :src=\"button.icon\" />\n              <div class=\"mew-heading-3 textDark--text\">\n                {{ button.label }}\n              </div>\n            </div>\n          </mew-button>\n        </v-col>\n      </v-row>\n    </div>\n    <v-dialog v-model=\"bluetoothModal\" persistent max-width=\"500\">\n      <v-sheet color=\"white\" class=\"pa-5\">\n        <h2 class=\"mb-5 text-center\">Bluetooth Required</h2>\n        <v-list>\n          <h3>Supported Browsers</h3>\n          <v-list-item v-for=\"(browser, i) in supportedBrowsers\" :key=\"i\">\n            <v-list-item-content>\n              <v-list-item-title>\n                {{ browser }}\n              </v-list-item-title>\n            </v-list-item-content>\n          </v-list-item>\n        </v-list>\n        <h4 class=\"mb-5\">* Remember to enable bluetooth on your device</h4>\n        <h3 class=\"mb-5 text-center\">Enable bluetooth on supported browsers</h3>\n        <v-expansion-panels\n          v-for=\"(browser, i) in enableBluetooth\"\n          :key=\"i\"\n          class=\"mt-1\"\n          accordion\n        >\n          <v-expansion-panel>\n            <v-expansion-panel-header>\n              {{ browser.title }}\n            </v-expansion-panel-header>\n            <v-expansion-panel-content\n              v-for=\"(direction, browserIndex) in browser.direction\"\n              :key=\"browserIndex\"\n            >\n              <h4 class=\"mb-3\">{{ direction.title }}</h4>\n              <ul v-for=\"(s, index) in direction.steps\" :key=\"index\">\n                <li v-if=\"s.length\" class=\"mb-1\">\n                  {{ s }}\n                </li>\n                <li v-if=\"!s.length\" class=\"mb-1\">\n                  <a :href=\"s.link\" target=\"_blank\">Learn More</a>\n                </li>\n              </ul>\n            </v-expansion-panel-content>\n          </v-expansion-panel>\n        </v-expansion-panels>\n        <div class=\"text-center\">\n          <mew-button\n            class=\"mt-6\"\n            title=\"Close\"\n            btn-size=\"xlarge\"\n            btn-style=\"outline\"\n            @click.native=\"bluetoothModal = false\"\n          />\n        </div>\n      </v-sheet>\n    </v-dialog>\n    <!--\n            =====================================================================================\n              Step 2: Start Access to Selected Hardware Wallet\n            =====================================================================================\n            -->\n    <div v-if=\"step <= walletInitialized\" class=\"full-width\">\n      <!--\n        =====================================================================================\n          Bitbox2\n        =====================================================================================\n        -->\n      <access-wallet-bitbox\n        v-if=\"onBitbox2\"\n        :paths=\"paths\"\n        :set-path=\"setPath\"\n        :hw-wallet-instance=\"hwWalletInstance\"\n        :unlock=\"bitbox02Unlock\"\n        :device-not-paired=\"bitBox2NotPaired\"\n        :device-connected=\"bitBox2Connected\"\n        :device-unpaired=\"bitBox2Unpaired\"\n        :device-pairing-code=\"bitBox2PairingCode\"\n        :device-confirmed=\"bitBox2Confirmed\"\n        :device-initialized=\"bitBox2Initialized\"\n      />\n      <!--\n        =====================================================================================\n          Keepkey\n        =====================================================================================\n        -->\n      <access-wallet-keepkey\n        v-if=\"onKeepkey\"\n        :paths=\"paths\"\n        :selected-path=\"selectedPath\"\n        :handler-loaded=\"loaded\"\n        :set-path=\"setPath\"\n      />\n      <!--\n        =====================================================================================\n          Cool Wallet\n        =====================================================================================\n        -->\n      <access-wallet-cool-wallet\n        v-if=\"onCoolWallet\"\n        :cool-wallet-unlock=\"coolWalletUnlock\"\n        :password-error=\"passwordError\"\n        @password=\"setPassword\"\n      />\n      <!--\n        =====================================================================================\n          Ledger\n        =====================================================================================\n        -->\n      <access-wallet-ledger\n        v-if=\"onLedger || onLedgerX\"\n        :ledger-unlock=\"nextStep\"\n        :ledger-apps=\"ledgerApps\"\n        :paths=\"paths\"\n        :selected-path=\"selectedPath\"\n        :set-path=\"setPath\"\n        @setBluetoothLedgerUnlock=\"setBluetoothLedgerUnlock\"\n      />\n\n      <!--\n        =====================================================================================\n          Trezor\n        =====================================================================================\n        -->\n      <div v-if=\"onTrezor\">\n        <access-wallet-trezor :trezor-unlock=\"trezorUnlock\" :reset=\"reset\" />\n      </div>\n    </div>\n    <!--\n      =====================================================================================\n        Step 3: Select Address and Network | (If Applicable)\n      =====================================================================================\n      -->\n    <!--\n    =====================================================================================\n    Network Address Step\n    =====================================================================================\n    -->\n    <access-wallet-address-network\n      v-if=\"step > walletInitialized\"\n      :back=\"null\"\n      :hide-path-selection=\"onKeepkey || onLedger\"\n      :disable-custom-paths=\"onLedger\"\n      :handler-wallet=\"hwWalletInstance\"\n      :selected-path=\"selectedPath\"\n      :paths=\"paths\"\n      :hide-networks=\"switchAddress\"\n      @unlock=\"setHardwareWallet\"\n      @setPath=\"setPath\"\n    />\n  </mew-overlay>\n</template>\n\n<script>\nimport { isEmpty, isObject } from 'lodash';\nimport { mapActions, mapGetters, mapState } from 'vuex';\n\nimport { Toast, ERROR } from '@/modules/toast/handler/handlerToast';\n\nimport appPaths from './hardware/handlers/hardwares/ledger/appPaths.js';\nimport allPaths from '@/modules/access-wallet/hardware/handlers/bip44';\nimport wallets from '@/modules/access-wallet/hardware/handlers/configs/configWallets';\nimport WALLET_TYPES from '@/modules/access-wallet/common/walletTypes';\nimport { ROUTES_WALLET } from '@/core/configs/configRoutes';\nimport { EventBus } from '@/core/plugins/eventBus.js';\nimport { ethereum as ethereumPath } from '@/modules/access-wallet/hardware/handlers/configs/configPaths.js';\n\nimport handlerAnalytics from '@/modules/analytics-opt-in/handlers/handlerAnalytics.mixin';\n\nexport default {\n  name: 'HardwareAccessOverlay',\n  components: {\n    AccessWalletKeepkey: () =>\n      import('./hardware/components/AccessWalletKeepkey'),\n    AccessWalletCoolWallet: () =>\n      import('./hardware/components/AccessWalletCoolWallet'),\n    AccessWalletTrezor: () =>\n      import('./hardware/components/AccessWalletTrezor.vue'),\n    AccessWalletLedger: () =>\n      import('./hardware/components/AccessWalletLedger.vue'),\n    AccessWalletLedgerX: () =>\n      import('./hardware/components/AccessWalletLedgerX.vue'),\n    AccessWalletAddressNetwork: () =>\n      import(\n        '@/modules/access-wallet/common/components/AccessWalletAddressNetwork'\n      ),\n    AccessWalletBitbox: () => import('./hardware/components/AccessWalletBitbox')\n  },\n  filters: {\n    concatAddress(val) {\n      // should probably be moved globablly\n      return `${val.substring(0, 11)}...${val.substring(\n        val.length - 4,\n        val.length\n      )}`;\n    }\n  },\n  mixins: [handlerAnalytics],\n  props: {\n    open: {\n      type: Boolean,\n      default: false\n    },\n    close: {\n      type: Function,\n      default: () => {}\n    },\n    switchAddress: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: () => ({\n    buttons: [\n      {\n        label: 'Ledger',\n        icon: require('@/assets/images/icons/hardware-wallets/Ledger-Nano-X-Label-Icon.svg'),\n        type: WALLET_TYPES.LEDGER\n      },\n      {\n        label: 'Trezor',\n        icon: require('@/assets/images/icons/hardware-wallets/icon-trezor.svg'),\n        type: WALLET_TYPES.TREZOR\n      },\n      {\n        label: 'KeepKey',\n        icon: require('@/assets/images/icons/hardware-wallets/icon-keepkey.svg'),\n        type: WALLET_TYPES.KEEPKEY\n      },\n      {\n        label: 'BitBox02',\n        icon: require('@/assets/images/icons/hardware-wallets/icon-bitbox.svg'),\n        type: WALLET_TYPES.BITBOX2\n      },\n      {\n        label: 'CoolWallet',\n        icon: require('@/assets/images/icons/hardware-wallets/icon-coolwallet.svg'),\n        type: WALLET_TYPES.COOL_WALLET,\n        bluetooth: true\n      }\n    ],\n    enableBluetooth: [\n      {\n        title: 'Chrome',\n        direction: [\n          {\n            title: 'Enable experimental flags',\n            steps: [\n              'chrome://flags/#enable-web-bluetooth',\n              'chrome://flags/#enable-web-bluetooth-new-permissions-backend',\n              'chrome://flags/#enable-experimental-web-platform-features'\n            ]\n          },\n          {\n            title: 'Official browser directions',\n            steps: [\n              {\n                link: 'https://support.google.com/chrome/answer/6362090?hl=en&co=GENIE.Platform%3DDesktop'\n              }\n            ]\n          }\n        ]\n      },\n      {\n        title: 'Opera',\n        direction: [\n          {\n            title: 'Enable experimental flags',\n            steps: [\n              'opera://flags/#enable-web-bluetooth-new-permissions-backend',\n              'opera://flags/#enable-experimental-web-platform-features'\n            ]\n          }\n        ]\n      },\n      {\n        title: 'Edge',\n        direction: [\n          {\n            title: 'Official browser directions',\n            steps: [\n              {\n                link: 'https://support.microsoft.com/en-us/microsoft-edge/connect-a-website-to-a-bluetooth-or-usb-device-in-microsoft-edge-107ba8a4-60aa-0fd3-2d26-afd63d0964f4'\n              }\n            ]\n          }\n        ]\n      }\n    ],\n    bluetooth: false,\n    bluetoothModal: false,\n    supportedBrowsers: ['Chrome', 'Edge', 'Opera'],\n    ledgerApps: appPaths.map(item => {\n      return {\n        name: item.network.name_long,\n        value: item.network.name,\n        img: item.network.icon\n      };\n    }),\n    wallets: wallets,\n    step: 1,\n    hwWalletInstance: {},\n    ledgerApp: {},\n    selectedPath: {\n      name: ethereumPath.label,\n      value: ethereumPath.path\n    },\n    walletType: '',\n    selectedLedgerApp: {},\n    password: '',\n    loaded: false,\n    ledgerConnected: false,\n    callback: () => {},\n    unwatch: () => {},\n    passwordError: false,\n    transport: null,\n    address: '',\n    ledgerBluetooth: false\n  }),\n  computed: {\n    ...mapGetters('global', ['Networks', 'network']),\n    ...mapGetters('wallet', ['getLedgerApp']),\n    ...mapState('wallet', ['identifier', 'ledgerBLE']),\n    walletInitialized() {\n      return this.wallets[this.walletType]\n        ? this.wallets[this.walletType]?.when\n        : 1;\n    },\n    /**\n     * Returns the correct network icon\n     */\n    icon() {\n      if (this.getLedgerApp !== null) {\n        const found = appPaths.find(item => {\n          return item.network.name_long === this.getLedgerApp.name;\n        });\n        return found ? found.network.icon : appPaths[0].network.icon;\n      }\n      return appPaths[0].network.icon;\n    },\n    /**\n     * Footer links to display beneath container\n     * TODO: get link urls from Russ\n     */\n    footerLink() {\n      // Commented for now as the new articles aren't available yet\n      // if (this.onKeepkey) {\n      //   return {\n      //     title: 'Using a KeepKey Hardware wallet with MEW',\n      //     url: 'https://kb.myetherwallet.com/en/hardware-wallets/using-keepkey-with-mew/'\n      //   };\n      // } else if (this.onCoolWalletS) {\n      //   return {\n      //     title: 'Using a CoolWallet S Hardware Wallet with MEW',\n      //     url: 'https://kb.myetherwallet.com/en/hardware-wallets/using-coolwallet-with-mew/'\n      //   };\n      // }\n      // if (this.onLedger) {\n      //   return {\n      //     title: 'Using a Ledger Hardware wallet with MEW',\n      //     url: 'https://kb.myetherwallet.com/en/hardware-wallets/using-ledger-with-mew/'\n      //   };\n      // }\n      // if (this.onTrezor) {\n      //   return {\n      //     title: 'Using a Trezor Hardware wallet with MEW',\n      //     url: 'https://kb.myetherwallet.com/en/hardware-wallets/using-trezor-with-mew/'\n      //   };\n      // }\n      return {\n        title: 'Hardware Wallets',\n        url: 'https://help.myetherwallet.com/en/collections/3043244-access-wallet'\n      };\n    },\n    showBack() {\n      if (this.switchAddress) {\n        return this.step === 2;\n      }\n\n      return this.step === 1;\n    },\n    /**\n     * On Bitbox2\n     */\n    onBitbox2() {\n      return this.walletType === WALLET_TYPES.BITBOX2;\n    },\n    /**\n     * On Ledger\n     */\n    onLedger() {\n      return this.walletType == WALLET_TYPES.LEDGER;\n    },\n    /**\n     * On Ledger X\n     */\n    onLedgerX() {\n      return this.walletType === WALLET_TYPES.LEDGER;\n    },\n    /**\n     * On CoolWallet\n     */\n    onCoolWallet() {\n      return (\n        this.walletType === WALLET_TYPES.COOL_WALLET &&\n        isEmpty(this.hwWalletInstance)\n      );\n    },\n    /**\n     * On Keepkey\n     */\n    onKeepkey() {\n      return this.walletType === WALLET_TYPES.KEEPKEY;\n    },\n    /**\n     * On Trezor\n     */\n    onTrezor() {\n      return this.walletType === WALLET_TYPES.TREZOR;\n    },\n    /**\n     * On Password step\n     */\n    onPassword() {\n      return (\n        this.walletType !== '' &&\n        this.wallets[this.walletType] &&\n        this.wallets[this.walletType].requiresPassword &&\n        (this.step === 3 || this.step === 1)\n      );\n    },\n    /**\n     * On Paths step\n     */\n    paths() {\n      const newArr = [];\n      if (this.walletType === WALLET_TYPES.LEDGER) {\n        if (this.getLedgerApp !== null) {\n          const found = appPaths.find(item => {\n            return item.network.name_long === this.getLedgerApp.name;\n          });\n          const path = found ? found.paths : appPaths[0].paths;\n          return path.map(item => {\n            return {\n              name: item.label,\n              value: item.path\n            };\n          });\n        }\n\n        appPaths[0].paths.forEach(item => {\n          newArr.push({\n            name: item.label,\n            value: item.path\n          });\n        });\n      }\n      if (\n        this.wallets[this.walletType] &&\n        this.wallets[this.walletType].hasPaths\n      ) {\n        allPaths[this.walletType].forEach(item => {\n          newArr.push({\n            name: item.label,\n            value: item.path\n          });\n        });\n      }\n      return newArr;\n    },\n    /**\n     * Overlay title\n     */\n    title() {\n      if (this.switchAddress) return 'Switch Address';\n      if (this.step > this.walletInitialized) {\n        return 'Select Network and Address';\n      } else if (this.step === 1) {\n        return 'Select a hardware wallet';\n      }\n      if (this.onBitbox2) return this.bitbox2Titles;\n      return this.walletType\n        ? this.wallets[this.walletType].title\n        : 'Select a hardware wallet';\n    },\n    bitBox2NotPaired() {\n      return (\n        isEmpty(this.hwWalletInstance) ||\n        (!isEmpty(this.hwWalletInstance) && !this.hwWalletInstance?.status)\n      );\n    },\n    bitBox2Connected() {\n      return (\n        !this.bitBox2NotPaired && this.hwWalletInstance?.status === 'connected'\n      );\n    },\n    bitBox2Unpaired() {\n      return (\n        !this.bitBox2NotPaired && this.hwWalletInstance?.status === 'unpaired'\n      );\n    },\n    bitBox2Initialized() {\n      return (\n        !this.bitBox2NotPaired &&\n        this.hwWalletInstance?.status === 'initialized'\n      );\n    },\n    bitBox2PairingCode() {\n      return !this.bitBox2NotPaired ? this.hwWalletInstance?.pairingCode : '';\n    },\n    bitBox2Confirmed() {\n      return !this.bitBox2NotPaired\n        ? this.hwWalletInstance?.pairingConfirmed\n        : false;\n    },\n    bitbox2Titles() {\n      if (this.bitBox2Connected) return 'Enter BitBox02 password';\n      if (this.bitBox2Unpaired) return 'Confirm pairing code';\n      if (this.bitBox2Initialized)\n        return 'BitBox02 succesfully initialized. Loading wallet';\n      return this.walletType ? this.wallets[this.walletType].title : '';\n    }\n  },\n  watch: {\n    selectedPath: {\n      handler: function () {\n        /**\n         * only call this when hwWalletInstance is not empty (ledger will error out)\n         * and when walletType has been selected (closing modal will error out)\n         */\n        if (this.walletType && !isEmpty(this.hwWalletInstance)) {\n          this.hwWalletInstance = {};\n          this[`${this.walletType}Unlock`]();\n        }\n      },\n      deep: true\n    },\n    open(newVal) {\n      if (newVal && this.switchAddress) this.setupSwitchAddress();\n    }\n  },\n  async mounted() {\n    /**\n     * errors and resets for disconnect of ble\n     */\n    EventBus.$on('bleDisconnect', () => {\n      this.reset();\n    });\n\n    try {\n      const { bluetooth } = navigator;\n      if (!bluetooth) return (this.bluetooth = false);\n      this.bluetooth = await bluetooth.getAvailability();\n    } catch (e) {\n      Toast(e, {}, ERROR);\n    }\n  },\n  beforeDestroy() {\n    EventBus.$off('bleDisconnect');\n  },\n  methods: {\n    ...mapActions('wallet', [\n      'setWallet',\n      'setLedgerBluetooth',\n      'setLedgerApp'\n    ]),\n    /**\n     * Resets the Data\n     */\n    reset() {\n      this.step = 1;\n      this.hwWalletInstance = {};\n      this.selectedPath = this.paths[0];\n      //this.setLedgerApp(this.ledgerApps[0]);\n      this.password = '';\n      this.walletType = '';\n      this.ledgerConnected = false;\n      this.ledgerBluetooth = false;\n    },\n    /**\n     * Sets up switch address\n     */\n    setupSwitchAddress() {\n      this.walletType = this.identifier;\n      if (this.identifier === WALLET_TYPES.LEDGER) {\n        this.ledgerBluetooth = this.ledgerBLE;\n      }\n      this.nextStep();\n    },\n    /**\n     * calls this.close and this.setupSwitchAddress\n     */\n    closeAndSetupSwitch() {\n      this.reset();\n      this.setupSwitchAddress();\n      this.close();\n    },\n    /**\n     * Overlay Action: Back\n     * if on keepkey step 3, it will return to step 1 so it will reset everything\n     */\n    back() {\n      if (this.step > 0) {\n        if (this.step === 1) {\n          this.reset();\n        } else if (this.step === 2) {\n          this.step = 1;\n          this.walletType = '';\n        } else {\n          this.hwWalletInstance = {};\n          if (this.onLedger || this.onLedgerX) {\n            this.step = 2;\n            //this[`${this.walletType}Unlock`]();\n          } else {\n            this.walletType = '';\n            this.step = 1;\n          }\n        }\n      } else {\n        this.close('showHardware');\n      }\n    },\n    overlayClose() {\n      this.reset();\n      this.close('showHardware');\n    },\n    trezorClose() {\n      this.step = 2;\n      this.walletType = WALLET_TYPES.TREZOR;\n    },\n    setWalletInstance(btnObj) {\n      this.walletType = btnObj.type;\n      this.nextStep();\n    },\n    nextStep() {\n      if (this.walletType) {\n        this.step++;\n        if (\n          this.step === 2 &&\n          (this.onTrezor || this.onLedger || this.onLedgerX)\n        )\n          this.selectedPath = this.paths[0];\n        if (this.step === this.walletInitialized) {\n          if (this.onCoolWallet || this.onBitbox2) return;\n          this[`${this.walletType}Unlock`]();\n        }\n      }\n    },\n    /**\n     * Unlock the hardware wallets\n     */\n    ledgerUnlock() {\n      if (this.ledgerBluetooth) {\n        this.bluetoothLedgerUnlock();\n      } else {\n        this.unlockPathOnly();\n      }\n    },\n    setBluetoothLedgerUnlock() {\n      this.ledgerBluetooth = true;\n      this.nextStep();\n    },\n    bluetoothLedgerUnlock() {\n      this.unlockPathOnly();\n    },\n    trezorUnlock() {\n      this.unlockPathOnly();\n    },\n    bitbox02Unlock() {\n      this.unlockPathOnly();\n    },\n    keepkeyUnlock() {\n      this.unlockPathOnly();\n    },\n    coolWalletUnlock() {\n      this.unlockPathAndPassword(null, this.password);\n    },\n    /**\n     * Unlock only the path step\n     */\n    unlockPathOnly() {\n      const path = isObject(this.selectedPath)\n        ? this.selectedPath.hasOwnProperty('value')\n          ? this.selectedPath?.value\n          : this.selectedPath\n        : this.paths[0].value;\n      this.wallets[this.walletType]\n        .create(path, this.ledgerBluetooth, this.getLedgerApp)\n        .then(_hwWallet => {\n          try {\n            this.loaded = true;\n            if (this.onLedgerX || this.onLedger) this.nextStep();\n            if ((this.onTrezor || this.onKeepkey) && this.step === 2)\n              this.step++;\n            if (this.onBitbox2) {\n              this.hwWalletInstance = _hwWallet;\n              if (!this.hwWalletInstance) {\n                this.wallets[this.walletType].create.errorHandler(\n                  'bitboxInstanceError'\n                );\n                return;\n              }\n              this.hwWalletInstance\n                .init()\n                .then(() => {\n                  this.nextStep();\n                })\n                .catch(e => {\n                  this.wallets[this.walletType].create.errorHandler(e);\n                  if (e.message === 'Error: Pairing rejected') {\n                    this.reset();\n                  }\n                });\n            } else {\n              this.hwWalletInstance = _hwWallet;\n            }\n          } catch (err) {\n            this.wallets[this.walletType].create.errorHandler(err);\n          }\n        })\n        .catch(err => {\n          if (this.onLedger || this.onLedgerX) this.step--;\n          if (this.wallets[this.walletType]) {\n            this.wallets[this.walletType].create.errorHandler(err);\n          } else {\n            Toast(err, {}, ERROR);\n          }\n          this.onTrezor ? this.trezorClose : this.reset();\n        });\n    },\n    /**\n     * Unlock the path and password step\n     */\n    unlockPathAndPassword(path, password) {\n      this.wallets[this.walletType]\n        .create(path, password)\n        .then(_hwWallet => {\n          this.hwWalletInstance = _hwWallet;\n          this.step++;\n        })\n        .catch(e => {\n          if (this.wallets[this.walletType]) {\n            if (\n              e.message === 'Wrong Password' &&\n              this.walletType === WALLET_TYPES.COOL_WALLET\n            ) {\n              this.passwordError = true;\n            } else {\n              this.wallets[this.walletType].create.errorHandler(e);\n            }\n          } else {\n            Toast(e, {}, ERROR);\n          }\n          if (e.message !== 'Wrong Password') {\n            this.reset();\n          }\n        });\n    },\n    /**\n     * Sets Path\n     */\n    setPath(obj) {\n      this.selectedPath = obj;\n    },\n    /**\n     * Set the selected wallet\n     */\n    setHardwareWallet(wallet) {\n      try {\n        this.setWallet([wallet])\n          .then(() => {\n            this.trackAccessWallet(wallet.identifier);\n            if (!this.switchAddress) {\n              if (wallet.identifier === WALLET_TYPES.LEDGER) {\n                this.setLedgerBluetooth(this.ledgerBluetooth);\n              }\n              this.$router.push({ name: ROUTES_WALLET.DASHBOARD.NAME });\n            } else {\n              this.reset();\n              this.close();\n            }\n          })\n          .catch(e => {\n            this.reset();\n            Toast(e, {}, ERROR);\n          });\n      } catch (e) {\n        this.reset();\n        Toast(e, {}, ERROR);\n      }\n    },\n    /**\n     * Sets Password\n     */\n    setPassword(str) {\n      this.password = str;\n      this.passwordError = false;\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.subtitle-container {\n  background-color: rgba(109, 137, 166, 0.06);\n}\n.button-container {\n  height: 100px;\n}\n\n@media screen and (min-width: 800px) {\n  .expand-width {\n    min-width: 740px;\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleAccessWalletHardware.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ModuleAccessWalletHardware.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ModuleAccessWalletHardware.vue?vue&type=template&id=0bfbf6a2&scoped=true&\"\nimport script from \"./ModuleAccessWalletHardware.vue?vue&type=script&lang=js&\"\nexport * from \"./ModuleAccessWalletHardware.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ModuleAccessWalletHardware.vue?vue&type=style&index=0&id=0bfbf6a2&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0bfbf6a2\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}